
/** BEGIN_INPUT_DEFINITION *********************************************
 *
 * All specifications as seen by the parser.
 *
 * Do not edit - automatically generated.
 */

/**********************************************************
 * Dump of all structures:
 */

class BAD_EVENT
{
  DATA8 bad;
} ;
class BARRIER
{
  ;
} ;
class DUMMY
{
  ;
} ;
class ERR_WORD_SIX
{
  ;
} ;
class FATIMA_VME_SCALERS
{
  raw_array_zero_suppress<DATA32,DATA32,32> data;
} ;
class FEBEX_EVENT
{
  DATA8 trig;
  DATA32 event_trigger_time_hi;
  DATA32 event_trigger_time_lo;
  DATA16 hit_pattern;
  raw_array_zero_suppress<DATA16,DATA16,16> channel_trigger_time_hi;
  raw_array_zero_suppress<DATA32,DATA32,16> channel_trigger_time_lo;
  raw_array_zero_suppress<DATA8,DATA8,16> pileup;
  raw_array_zero_suppress<DATA8,DATA8,16> overflow;
  raw_array_zero_suppress<DATA8,DATA8,16> channel_cfd;
  raw_array_zero_suppress<DATA32,DATA32,16> channel_energy;
} ;
class TRACE
{
  raw_array_zero_suppress<DATA16,DATA16,4000> traces[16];
  raw_array_zero_suppress<DATA8,DATA8,16> channel_id_traces;
} ;
class FEBEX_EVENT_TRACES
{
  DATA8 trig;
  DATA32 event_trigger_time_hi;
  DATA32 event_trigger_time_lo;
  DATA16 hit_pattern;
  DATA32 num_channels_fired;
  DATA8 board_num;
  raw_array_zero_suppress<DATA8,DATA8,16> channel_id;
  raw_array_zero_suppress<DATA16,DATA16,16> channel_trigger_time_hi;
  raw_array_zero_suppress<DATA32,DATA32,16> channel_trigger_time_lo;
  raw_array_zero_suppress<DATA8,DATA8,16> pileup;
  raw_array_zero_suppress<DATA8,DATA8,16> overflow;
  raw_array_zero_suppress<DATA8,DATA8,16> channel_cfd;
  raw_array_zero_suppress<DATA32,DATA32,16> channel_energy;
  TRACE trace;
} ;
class FEBEX_PADDING
{
  ;
} ;
class VME_CAEN_V830
{
  raw_array_zero_suppress<DATA32,DATA32,32> data;
  union 
  {
    struct 
    {
      uint32 event_number : 16;
      uint32 ts : 2;
      uint32 count : 6;
      uint32 undefined : 2;
      uint32 unnamed_26_26 : 1;
      uint32 geom : 5;
    } ;
    uint32 u32;
  } header;
} ;
class ZERO_FILLER
{
  ;
} ;
class VME_CAEN_V7X5
{
  raw_array_zero_suppress<DATA24,DATA24,32> data;
} ;
class TDC_HEADER
{
  ;
} ;
class TDC_DATA_V1290
{
  raw_array_multi_zero_suppress<DATA24,DATA24,128,128> data;
  raw_array_multi_zero_suppress<DATA8,DATA8,128,128> leadOrTrail;
} ;
class TDC_ERROR
{
  ;
} ;
class TDC_TRAILER
{
  ;
} ;
class VME_CAEN_V1290_N
{
  DATA8 geo;
  TDC_HEADER tdc_header;
  TDC_DATA_V1290 measurement;
  TDC_ERROR tdc_err;
  TDC_TRAILER tdc_trailer;
} ;
class MAIN_CRATE_DATA
{
  BARRIER barrier0;
  VME_CAEN_V830 v830;
  ZERO_FILLER filler0;
  BARRIER barrier1;
  VME_CAEN_V7X5 v792;
  BARRIER barrier2;
  VME_CAEN_V1290_N v1290;
} ;
class SPILL_OFF
{
  DATA8 spilloff;
} ;
class SPILL_ON
{
  DATA8 spillon;
} ;
class TAMEX4_EPOCH_DATA
{
  ;
} ;
class TAMEX4_HEADER
{
  DATA16 post_trig_ns;
  DATA16 pre_trig_ns;
} ;
class TAMEX4_PADDING
{
  ;
} ;
class TAMEX4_TIME_DATA
{
  ;
} ;
class TAMEX4_SFP
{
  DATA16 trig;
  DATA32 event_size;
  raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_coarse;
  raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_fine;
  raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_edge;
  raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_channel;
  raw_list_ii_zero_suppress<DATA32,DATA32,1024> time_epoch;
  TAMEX4_EPOCH_DATA epoch;
  TAMEX4_TIME_DATA time;
} ;
class TDC_DATA_V1190
{
  raw_array_multi_zero_suppress<DATA24,DATA24,128,128> data;
  raw_array_multi_zero_suppress<DATA8,DATA8,128,128> leadOrTrail;
} ;
class TIMESTAMP_WHITERABBIT
{
  DATA12 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class TIMESTAMP_WHITERABBIT_EXTENDED
{
  DATA16 subsystem_id;
  DATA16 t1;
  DATA16 t2;
  DATA16 t3;
  DATA16 t4;
} ;
class TPAT_CRATE_DATA
{
  DATA16 tpat;
  uint32 w1;
  uint32 w2;
  uint32 w3;
  union 
  {
    struct 
    {
      uint32 pattern : 16;
      uint32 nothing : 16;
    } ;
    uint32 u32;
  } trigger_pattern;
} ;
class VME_CAEN_V1190_N
{
  DATA8 geo;
  TDC_HEADER tdc_header;
  TDC_DATA_V1190 measurement;
  TDC_ERROR tdc_error;
  TDC_TRAILER tdc_trailer;
} ;
class TPC_CRATE_DATA
{
  BARRIER barrier0;
  VME_CAEN_V7X5 v785;
  VME_CAEN_V7X5 v775;
  BARRIER barrier[3];
  VME_CAEN_V1190_N v1190;
} ;
class TRIG3EVENT
{
  ;
} ;
class USER_CRATE_DATA
{
  BARRIER barrier1;
  VME_CAEN_V7X5 v775[2];
  VME_CAEN_V7X5 v785[2];
  BARRIER barrier0;
  VME_CAEN_V830 v830;
  ZERO_FILLER filler0;
} ;
class VME_CAEN_V1751
{
  DATA8 board_id;
  DATA8 channels;
  DATA32 board_time;
  raw_list_ii_zero_suppress<DATA32,DATA32,64> channel_time;
  raw_list_ii_zero_suppress<DATA16,DATA16,64> chan_ext_time;
  raw_list_ii_zero_suppress<DATA12,DATA12,64> chan_fine_time;
  raw_list_ii_zero_suppress<DATA16,DATA16,64> qshort;
  raw_list_ii_zero_suppress<DATA16,DATA16,64> qlong;
} ;
class WR_MULTI
{
  DATA32 time_hi;
  DATA32 time_lo;
} ;
class aida_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
  EXT_AIDA data;
} ;
class bgo_tamex_subevent : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT_EXTENDED ts;
  union 
  {
    struct 
    {
      uint32 b : 32;
    } ;
    uint32 u32;
  } be;
  TAMEX4_HEADER trigger_window;
  TAMEX4_PADDING padding;
  TAMEX4_SFP tamex[3];
} ;
class bm_subev : public unpack_subevent_base
{
  raw_list_ii_zero_suppress<DATA32,DATA32,100000> dataS2;
  raw_list_ii_zero_suppress<DATA32,DATA32,100000> dataS4;
  TIMESTAMP_WHITERABBIT_EXTENDED ts;
} ;
class bplast_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
  TAMEX4_HEADER trigger_window;
  TAMEX4_PADDING padding;
  TAMEX4_SFP tamex[9];
} ;
class fatima_tamex_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT_EXTENDED ts;
  TAMEX4_HEADER trigger_window;
  TAMEX4_PADDING padding;
  TAMEX4_SFP tamex[4];
} ;
class fatima_vme_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT_EXTENDED ts;
  ERR_WORD_SIX error1;
  FATIMA_VME_SCALERS scalers;
  VME_CAEN_V1751 qdc1;
  VME_CAEN_V1751 qdc2;
  VME_CAEN_V1751 qdc3;
  VME_CAEN_V1751 qdc4;
  VME_CAEN_V1751 qdc5;
  ERR_WORD_SIX error2;
  VME_CAEN_V1290_N tdc1;
  ERR_WORD_SIX error3;
  VME_CAEN_V1290_N tdc2;
} ;
class febex_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT ts;
  FEBEX_PADDING padding;
  FEBEX_EVENT data[4];
} ;
class frs_main_subev : public unpack_subevent_base
{
  TRIG3EVENT trig3;
  SPILL_ON spill_on;
  SPILL_OFF spill_off;
  MAIN_CRATE_DATA data;
} ;
class frs_tpat_subev : public unpack_subevent_base
{
  TIMESTAMP_WHITERABBIT wr;
  TRIG3EVENT trig3;
  TPAT_CRATE_DATA data;
} ;
class frs_tpc_subev : public unpack_subevent_base
{
  union 
  {
    struct 
    {
      uint32 b : 32;
    } ;
    uint32 u32;
  } be;
  TRIG3EVENT trig3;
  SPILL_ON spill_on;
  SPILL_OFF spill_off;
  TPC_CRATE_DATA data;
} ;
class frs_user_subev : public unpack_subevent_base
{
  TRIG3EVENT trig3;
  SPILL_ON spill_on;
  SPILL_OFF spill_off;
  USER_CRATE_DATA data;
} ;
class unpack_event : public unpack_event_base
{
  aida_subev aida;
  febex_subev germanium;
  fatima_tamex_subev fatima;
  fatima_vme_subev fatimavme;
  bplast_subev bplast;
  bgo_tamex_subevent bgo;
  frs_main_subev frsmain;
  frs_tpc_subev frstpc;
  frs_user_subev frsuser;
  frs_tpat_subev frstpat;
  bm_subev beammonitor;
} ;
class unpack_sticky_event : public unpack_sticky_event_base
{
  ;
} ;
/**********************************************************/

/** END_INPUT_DEFINITION **********************************************/


/** BEGIN_MIRROR_STRUCT ************************************************
 *
 * Mirror (1 to 1) structure.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

#ifndef USER_DEF_BAD_EVENT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(BAD_EVENT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(bad);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bad);
  STRUCT_MIRROR_FCNS_DECL(BAD_EVENT);
};
#endif//USER_DEF_BAD_EVENT

#ifndef USER_DEF_BARRIER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(BARRIER)
{
public:
  STRUCT_MIRROR_FCNS_DECL(BARRIER);
};
#endif//USER_DEF_BARRIER

#ifndef USER_DEF_DUMMY
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(DUMMY)
{
public:
  STRUCT_MIRROR_FCNS_DECL(DUMMY);
};
#endif//USER_DEF_DUMMY

#ifndef USER_DEF_ERR_WORD_SIX
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(ERR_WORD_SIX)
{
public:
  STRUCT_MIRROR_FCNS_DECL(ERR_WORD_SIX);
};
#endif//USER_DEF_ERR_WORD_SIX

#ifndef USER_DEF_FATIMA_VME_SCALERS
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FATIMA_VME_SCALERS)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(FATIMA_VME_SCALERS);
};
#endif//USER_DEF_FATIMA_VME_SCALERS

#ifndef USER_DEF_FEBEX_EVENT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_EVENT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(trig);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig);
  STRUCT_MIRROR_ITEM_CTRL(event_trigger_time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_trigger_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(event_trigger_time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_trigger_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(hit_pattern);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(hit_pattern);
  STRUCT_MIRROR_ITEM_CTRL(channel_trigger_time_hi);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),16> STRUCT_MIRROR_NAME(channel_trigger_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(channel_trigger_time_lo);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(channel_trigger_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(pileup);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(pileup);
  STRUCT_MIRROR_ITEM_CTRL(overflow);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(overflow);
  STRUCT_MIRROR_ITEM_CTRL(channel_cfd);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(channel_cfd);
  STRUCT_MIRROR_ITEM_CTRL(channel_energy);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(channel_energy);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_EVENT);
};
#endif//USER_DEF_FEBEX_EVENT

#ifndef USER_DEF_TRACE
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRACE)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(traces);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(traces__i0,,16);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),4000> STRUCT_MIRROR_NAME(traces[16]);
  STRUCT_MIRROR_ITEM_CTRL(channel_id_traces);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(channel_id_traces);
  STRUCT_MIRROR_FCNS_DECL(TRACE);
};
#endif//USER_DEF_TRACE

#ifndef USER_DEF_FEBEX_EVENT_TRACES
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_EVENT_TRACES)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(trig);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig);
  STRUCT_MIRROR_ITEM_CTRL(event_trigger_time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_trigger_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(event_trigger_time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_trigger_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(hit_pattern);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(hit_pattern);
  STRUCT_MIRROR_ITEM_CTRL(num_channels_fired);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(num_channels_fired);
  STRUCT_MIRROR_ITEM_CTRL(board_num);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(board_num);
  STRUCT_MIRROR_ITEM_CTRL(channel_id);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(channel_id);
  STRUCT_MIRROR_ITEM_CTRL(channel_trigger_time_hi);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),16> STRUCT_MIRROR_NAME(channel_trigger_time_hi);
  STRUCT_MIRROR_ITEM_CTRL(channel_trigger_time_lo);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(channel_trigger_time_lo);
  STRUCT_MIRROR_ITEM_CTRL(pileup);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(pileup);
  STRUCT_MIRROR_ITEM_CTRL(overflow);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(overflow);
  STRUCT_MIRROR_ITEM_CTRL(channel_cfd);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),16> STRUCT_MIRROR_NAME(channel_cfd);
  STRUCT_MIRROR_ITEM_CTRL(channel_energy);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),16> STRUCT_MIRROR_NAME(channel_energy);
  STRUCT_MIRROR_ITEM_CTRL(trace);
  STRUCT_MIRROR_TYPE(TRACE) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trace);
  STRUCT_MIRROR_FCNS_DECL(FEBEX_EVENT_TRACES);
};
#endif//USER_DEF_FEBEX_EVENT_TRACES

#ifndef USER_DEF_FEBEX_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(FEBEX_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(FEBEX_PADDING);
};
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_VME_CAEN_V830
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V830)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),32> STRUCT_MIRROR_NAME(data);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(event_number);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_number);
      STRUCT_MIRROR_ITEM_CTRL(ts);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
      STRUCT_MIRROR_ITEM_CTRL(count);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(count);
      STRUCT_MIRROR_ITEM_CTRL(undefined);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(undefined);
      STRUCT_MIRROR_ITEM_CTRL(unnamed_26_26);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(unnamed_26_26);
      STRUCT_MIRROR_ITEM_CTRL(geom);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geom);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(header);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V830);
};
#endif//USER_DEF_VME_CAEN_V830

#ifndef USER_DEF_ZERO_FILLER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(ZERO_FILLER)
{
public:
  STRUCT_MIRROR_FCNS_DECL(ZERO_FILLER);
};
#endif//USER_DEF_ZERO_FILLER

#ifndef USER_DEF_VME_CAEN_V7X5
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V7X5)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),32> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V7X5);
};
#endif//USER_DEF_VME_CAEN_V7X5

#ifndef USER_DEF_TDC_HEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_HEADER)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TDC_HEADER);
};
#endif//USER_DEF_TDC_HEADER

#ifndef USER_DEF_TDC_DATA_V1290
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_DATA_V1290)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),128,128> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_ITEM_CTRL(leadOrTrail);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),128,128> STRUCT_MIRROR_NAME(leadOrTrail);
  STRUCT_MIRROR_FCNS_DECL(TDC_DATA_V1290);
};
#endif//USER_DEF_TDC_DATA_V1290

#ifndef USER_DEF_TDC_ERROR
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_ERROR)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TDC_ERROR);
};
#endif//USER_DEF_TDC_ERROR

#ifndef USER_DEF_TDC_TRAILER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_TRAILER)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TDC_TRAILER);
};
#endif//USER_DEF_TDC_TRAILER

#ifndef USER_DEF_VME_CAEN_V1290_N
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_N)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(geo);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geo);
  STRUCT_MIRROR_ITEM_CTRL(tdc_header);
  STRUCT_MIRROR_TYPE(TDC_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_header);
  STRUCT_MIRROR_ITEM_CTRL(measurement);
  STRUCT_MIRROR_TYPE(TDC_DATA_V1290) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(measurement);
  STRUCT_MIRROR_ITEM_CTRL(tdc_err);
  STRUCT_MIRROR_TYPE(TDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_err);
  STRUCT_MIRROR_ITEM_CTRL(tdc_trailer);
  STRUCT_MIRROR_TYPE(TDC_TRAILER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1290_N);
};
#endif//USER_DEF_VME_CAEN_V1290_N

#ifndef USER_DEF_MAIN_CRATE_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(MAIN_CRATE_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(barrier0);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier0);
  STRUCT_MIRROR_ITEM_CTRL(v830);
  STRUCT_MIRROR_TYPE(VME_CAEN_V830) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v830);
  STRUCT_MIRROR_ITEM_CTRL(filler0);
  STRUCT_MIRROR_TYPE(ZERO_FILLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(filler0);
  STRUCT_MIRROR_ITEM_CTRL(barrier1);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier1);
  STRUCT_MIRROR_ITEM_CTRL(v792);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v792);
  STRUCT_MIRROR_ITEM_CTRL(barrier2);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier2);
  STRUCT_MIRROR_ITEM_CTRL(v1290);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_N) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v1290);
  STRUCT_MIRROR_FCNS_DECL(MAIN_CRATE_DATA);
};
#endif//USER_DEF_MAIN_CRATE_DATA

#ifndef USER_DEF_SPILL_OFF
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SPILL_OFF)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(spilloff);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spilloff);
  STRUCT_MIRROR_FCNS_DECL(SPILL_OFF);
};
#endif//USER_DEF_SPILL_OFF

#ifndef USER_DEF_SPILL_ON
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(SPILL_ON)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(spillon);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spillon);
  STRUCT_MIRROR_FCNS_DECL(SPILL_ON);
};
#endif//USER_DEF_SPILL_ON

#ifndef USER_DEF_TAMEX4_EPOCH_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_EPOCH_DATA)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_EPOCH_DATA);
};
#endif//USER_DEF_TAMEX4_EPOCH_DATA

#ifndef USER_DEF_TAMEX4_HEADER
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_HEADER)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(post_trig_ns);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(post_trig_ns);
  STRUCT_MIRROR_ITEM_CTRL(pre_trig_ns);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pre_trig_ns);
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_HEADER);
};
#endif//USER_DEF_TAMEX4_HEADER

#ifndef USER_DEF_TAMEX4_PADDING
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_PADDING)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_PADDING);
};
#endif//USER_DEF_TAMEX4_PADDING

#ifndef USER_DEF_TAMEX4_TIME_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_TIME_DATA)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_TIME_DATA);
};
#endif//USER_DEF_TAMEX4_TIME_DATA

#ifndef USER_DEF_TAMEX4_SFP
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TAMEX4_SFP)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(trig);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig);
  STRUCT_MIRROR_ITEM_CTRL(event_size);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(event_size);
  STRUCT_MIRROR_ITEM_CTRL(time_coarse);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1024> STRUCT_MIRROR_NAME(time_coarse);
  STRUCT_MIRROR_ITEM_CTRL(time_fine);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1024> STRUCT_MIRROR_NAME(time_fine);
  STRUCT_MIRROR_ITEM_CTRL(time_edge);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1024> STRUCT_MIRROR_NAME(time_edge);
  STRUCT_MIRROR_ITEM_CTRL(time_channel);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),1024> STRUCT_MIRROR_NAME(time_channel);
  STRUCT_MIRROR_ITEM_CTRL(time_epoch);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),1024> STRUCT_MIRROR_NAME(time_epoch);
  STRUCT_MIRROR_ITEM_CTRL(epoch);
  STRUCT_MIRROR_TYPE(TAMEX4_EPOCH_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(epoch);
  STRUCT_MIRROR_ITEM_CTRL(time);
  STRUCT_MIRROR_TYPE(TAMEX4_TIME_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time);
  STRUCT_MIRROR_FCNS_DECL(TAMEX4_SFP);
};
#endif//USER_DEF_TAMEX4_SFP

#ifndef USER_DEF_TDC_DATA_V1190
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TDC_DATA_V1190)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA24),STRUCT_MIRROR_TEMPLATE_ARG(DATA24),128,128> STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_ITEM_CTRL(leadOrTrail);
  STRUCT_MIRROR_TYPE(raw_array_multi_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA8),STRUCT_MIRROR_TEMPLATE_ARG(DATA8),128,128> STRUCT_MIRROR_NAME(leadOrTrail);
  STRUCT_MIRROR_FCNS_DECL(TDC_DATA_V1190);
};
#endif//USER_DEF_TDC_DATA_V1190

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA12) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT_EXTENDED)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(subsystem_id);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(subsystem_id);
  STRUCT_MIRROR_ITEM_CTRL(t1);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t1);
  STRUCT_MIRROR_ITEM_CTRL(t2);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t2);
  STRUCT_MIRROR_ITEM_CTRL(t3);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t3);
  STRUCT_MIRROR_ITEM_CTRL(t4);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(t4);
  STRUCT_MIRROR_FCNS_DECL(TIMESTAMP_WHITERABBIT_EXTENDED);
};
#endif//USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED

#ifndef USER_DEF_TPAT_CRATE_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TPAT_CRATE_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(tpat);
  STRUCT_MIRROR_TYPE(DATA16) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tpat);
  STRUCT_MIRROR_ITEM_CTRL(w1);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(w1);
  STRUCT_MIRROR_ITEM_CTRL(w2);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(w2);
  STRUCT_MIRROR_ITEM_CTRL(w3);
  STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(w3);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(pattern);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(pattern);
      STRUCT_MIRROR_ITEM_CTRL(nothing);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(nothing);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(trigger_pattern);
  STRUCT_MIRROR_FCNS_DECL(TPAT_CRATE_DATA);
};
#endif//USER_DEF_TPAT_CRATE_DATA

#ifndef USER_DEF_VME_CAEN_V1190_N
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_N)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(geo);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(geo);
  STRUCT_MIRROR_ITEM_CTRL(tdc_header);
  STRUCT_MIRROR_TYPE(TDC_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_header);
  STRUCT_MIRROR_ITEM_CTRL(measurement);
  STRUCT_MIRROR_TYPE(TDC_DATA_V1190) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(measurement);
  STRUCT_MIRROR_ITEM_CTRL(tdc_error);
  STRUCT_MIRROR_TYPE(TDC_ERROR) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_error);
  STRUCT_MIRROR_ITEM_CTRL(tdc_trailer);
  STRUCT_MIRROR_TYPE(TDC_TRAILER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc_trailer);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1190_N);
};
#endif//USER_DEF_VME_CAEN_V1190_N

#ifndef USER_DEF_TPC_CRATE_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TPC_CRATE_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(barrier0);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier0);
  STRUCT_MIRROR_ITEM_CTRL(v785);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v785);
  STRUCT_MIRROR_ITEM_CTRL(v775);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v775);
  STRUCT_MIRROR_ITEM_CTRL(barrier);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(barrier__i0,,3);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier[3]);
  STRUCT_MIRROR_ITEM_CTRL(v1190);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1190_N) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v1190);
  STRUCT_MIRROR_FCNS_DECL(TPC_CRATE_DATA);
};
#endif//USER_DEF_TPC_CRATE_DATA

#ifndef USER_DEF_TRIG3EVENT
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(TRIG3EVENT)
{
public:
  STRUCT_MIRROR_FCNS_DECL(TRIG3EVENT);
};
#endif//USER_DEF_TRIG3EVENT

#ifndef USER_DEF_USER_CRATE_DATA
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(USER_CRATE_DATA)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(barrier1);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier1);
  STRUCT_MIRROR_ITEM_CTRL(v775);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(v775__i0,,2);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v775[2]);
  STRUCT_MIRROR_ITEM_CTRL(v785);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(v785__i0,,2);
  STRUCT_MIRROR_TYPE(VME_CAEN_V7X5) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v785[2]);
  STRUCT_MIRROR_ITEM_CTRL(barrier0);
  STRUCT_MIRROR_TYPE(BARRIER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(barrier0);
  STRUCT_MIRROR_ITEM_CTRL(v830);
  STRUCT_MIRROR_TYPE(VME_CAEN_V830) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(v830);
  STRUCT_MIRROR_ITEM_CTRL(filler0);
  STRUCT_MIRROR_TYPE(ZERO_FILLER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(filler0);
  STRUCT_MIRROR_FCNS_DECL(USER_CRATE_DATA);
};
#endif//USER_DEF_USER_CRATE_DATA

#ifndef USER_DEF_VME_CAEN_V1751
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(VME_CAEN_V1751)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(board_id);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(board_id);
  STRUCT_MIRROR_ITEM_CTRL(channels);
  STRUCT_MIRROR_TYPE(DATA8) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(channels);
  STRUCT_MIRROR_ITEM_CTRL(board_time);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(board_time);
  STRUCT_MIRROR_ITEM_CTRL(channel_time);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),64> STRUCT_MIRROR_NAME(channel_time);
  STRUCT_MIRROR_ITEM_CTRL(chan_ext_time);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),64> STRUCT_MIRROR_NAME(chan_ext_time);
  STRUCT_MIRROR_ITEM_CTRL(chan_fine_time);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA12),STRUCT_MIRROR_TEMPLATE_ARG(DATA12),64> STRUCT_MIRROR_NAME(chan_fine_time);
  STRUCT_MIRROR_ITEM_CTRL(qshort);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),64> STRUCT_MIRROR_NAME(qshort);
  STRUCT_MIRROR_ITEM_CTRL(qlong);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA16),STRUCT_MIRROR_TEMPLATE_ARG(DATA16),64> STRUCT_MIRROR_NAME(qlong);
  STRUCT_MIRROR_FCNS_DECL(VME_CAEN_V1751);
};
#endif//USER_DEF_VME_CAEN_V1751

#ifndef USER_DEF_WR_MULTI
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(WR_MULTI)
{
public:
  STRUCT_MIRROR_ITEM_CTRL(time_hi);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_hi);
  STRUCT_MIRROR_ITEM_CTRL(time_lo);
  STRUCT_MIRROR_TYPE(DATA32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(time_lo);
  STRUCT_MIRROR_FCNS_DECL(WR_MULTI);
};
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_aida_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(aida_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(EXT_AIDA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(aida_subev);
};
#endif//USER_DEF_aida_subev

#ifndef USER_DEF_bgo_tamex_subevent
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(bgo_tamex_subevent) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT_EXTENDED) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(b);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(b);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(be);
  STRUCT_MIRROR_ITEM_CTRL(trigger_window);
  STRUCT_MIRROR_TYPE(TAMEX4_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(TAMEX4_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tamex__i0,,3);
  STRUCT_MIRROR_TYPE(TAMEX4_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex[3]);
  STRUCT_MIRROR_FCNS_DECL(bgo_tamex_subevent);
};
#endif//USER_DEF_bgo_tamex_subevent

#ifndef USER_DEF_bm_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(bm_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(dataS2);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),100000> STRUCT_MIRROR_NAME(dataS2);
  STRUCT_MIRROR_ITEM_CTRL(dataS4);
  STRUCT_MIRROR_TYPE(raw_list_ii_zero_suppress) < STRUCT_MIRROR_TYPE_TEMPLATE STRUCT_MIRROR_TEMPLATE_ARG(DATA32),STRUCT_MIRROR_TEMPLATE_ARG(DATA32),100000> STRUCT_MIRROR_NAME(dataS4);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT_EXTENDED) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_FCNS_DECL(bm_subev);
};
#endif//USER_DEF_bm_subev

#ifndef USER_DEF_bplast_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(bplast_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(trigger_window);
  STRUCT_MIRROR_TYPE(TAMEX4_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(TAMEX4_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tamex__i0,,9);
  STRUCT_MIRROR_TYPE(TAMEX4_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex[9]);
  STRUCT_MIRROR_FCNS_DECL(bplast_subev);
};
#endif//USER_DEF_bplast_subev

#ifndef USER_DEF_fatima_tamex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fatima_tamex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT_EXTENDED) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(trigger_window);
  STRUCT_MIRROR_TYPE(TAMEX4_HEADER) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trigger_window);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(TAMEX4_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(tamex);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(tamex__i0,,4);
  STRUCT_MIRROR_TYPE(TAMEX4_SFP) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tamex[4]);
  STRUCT_MIRROR_FCNS_DECL(fatima_tamex_subev);
};
#endif//USER_DEF_fatima_tamex_subev

#ifndef USER_DEF_fatima_vme_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(fatima_vme_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT_EXTENDED) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(error1);
  STRUCT_MIRROR_TYPE(ERR_WORD_SIX) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(error1);
  STRUCT_MIRROR_ITEM_CTRL(scalers);
  STRUCT_MIRROR_TYPE(FATIMA_VME_SCALERS) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(scalers);
  STRUCT_MIRROR_ITEM_CTRL(qdc1);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1751) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc1);
  STRUCT_MIRROR_ITEM_CTRL(qdc2);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1751) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc2);
  STRUCT_MIRROR_ITEM_CTRL(qdc3);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1751) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc3);
  STRUCT_MIRROR_ITEM_CTRL(qdc4);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1751) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc4);
  STRUCT_MIRROR_ITEM_CTRL(qdc5);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1751) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(qdc5);
  STRUCT_MIRROR_ITEM_CTRL(error2);
  STRUCT_MIRROR_TYPE(ERR_WORD_SIX) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(error2);
  STRUCT_MIRROR_ITEM_CTRL(tdc1);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_N) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc1);
  STRUCT_MIRROR_ITEM_CTRL(error3);
  STRUCT_MIRROR_TYPE(ERR_WORD_SIX) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(error3);
  STRUCT_MIRROR_ITEM_CTRL(tdc2);
  STRUCT_MIRROR_TYPE(VME_CAEN_V1290_N) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(tdc2);
  STRUCT_MIRROR_FCNS_DECL(fatima_vme_subev);
};
#endif//USER_DEF_fatima_vme_subev

#ifndef USER_DEF_febex_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(febex_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(ts);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(ts);
  STRUCT_MIRROR_ITEM_CTRL(padding);
  STRUCT_MIRROR_TYPE(FEBEX_PADDING) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(padding);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_ITEM_CTRL_ARRAY(data__i0,,4);
  STRUCT_MIRROR_TYPE(FEBEX_EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data[4]);
  STRUCT_MIRROR_FCNS_DECL(febex_subev);
};
#endif//USER_DEF_febex_subev

#ifndef USER_DEF_frs_main_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(frs_main_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(trig3);
  STRUCT_MIRROR_TYPE(TRIG3EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig3);
  STRUCT_MIRROR_ITEM_CTRL(spill_on);
  STRUCT_MIRROR_TYPE(SPILL_ON) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spill_on);
  STRUCT_MIRROR_ITEM_CTRL(spill_off);
  STRUCT_MIRROR_TYPE(SPILL_OFF) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spill_off);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(MAIN_CRATE_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(frs_main_subev);
};
#endif//USER_DEF_frs_main_subev

#ifndef USER_DEF_frs_tpat_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(frs_tpat_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(wr);
  STRUCT_MIRROR_TYPE(TIMESTAMP_WHITERABBIT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(wr);
  STRUCT_MIRROR_ITEM_CTRL(trig3);
  STRUCT_MIRROR_TYPE(TRIG3EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig3);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(TPAT_CRATE_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(frs_tpat_subev);
};
#endif//USER_DEF_frs_tpat_subev

#ifndef USER_DEF_frs_tpc_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(frs_tpc_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
#if STRUCT_ONLY_LAST_UNION_MEMBER
  struct 
#else
  union 
#endif

  {
  public:
#if !STRUCT_ONLY_LAST_UNION_MEMBER
    struct 
    {
    public:
      STRUCT_MIRROR_ITEM_CTRL(b);
      STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(b);
    };
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
    STRUCT_MIRROR_ITEM_CTRL(u32);
    STRUCT_MIRROR_TYPE(uint32) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(u32);
  } STRUCT_MIRROR_NAME(be);
  STRUCT_MIRROR_ITEM_CTRL(trig3);
  STRUCT_MIRROR_TYPE(TRIG3EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig3);
  STRUCT_MIRROR_ITEM_CTRL(spill_on);
  STRUCT_MIRROR_TYPE(SPILL_ON) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spill_on);
  STRUCT_MIRROR_ITEM_CTRL(spill_off);
  STRUCT_MIRROR_TYPE(SPILL_OFF) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spill_off);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(TPC_CRATE_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(frs_tpc_subev);
};
#endif//USER_DEF_frs_tpc_subev

#ifndef USER_DEF_frs_user_subev
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(frs_user_subev) : public STRUCT_MIRROR_BASE(unpack_subevent_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_subevent_base);
  STRUCT_MIRROR_ITEM_CTRL(trig3);
  STRUCT_MIRROR_TYPE(TRIG3EVENT) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(trig3);
  STRUCT_MIRROR_ITEM_CTRL(spill_on);
  STRUCT_MIRROR_TYPE(SPILL_ON) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spill_on);
  STRUCT_MIRROR_ITEM_CTRL(spill_off);
  STRUCT_MIRROR_TYPE(SPILL_OFF) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(spill_off);
  STRUCT_MIRROR_ITEM_CTRL(data);
  STRUCT_MIRROR_TYPE(USER_CRATE_DATA) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(data);
  STRUCT_MIRROR_FCNS_DECL(frs_user_subev);
};
#endif//USER_DEF_frs_user_subev

#ifndef USER_DEF_unpack_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_event) : public STRUCT_MIRROR_BASE(unpack_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_event_base);
  STRUCT_MIRROR_ITEM_CTRL(aida);
  STRUCT_MIRROR_TYPE(aida_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(aida);
  STRUCT_MIRROR_ITEM_CTRL(germanium);
  STRUCT_MIRROR_TYPE(febex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(germanium);
  STRUCT_MIRROR_ITEM_CTRL(fatima);
  STRUCT_MIRROR_TYPE(fatima_tamex_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fatima);
  STRUCT_MIRROR_ITEM_CTRL(fatimavme);
  STRUCT_MIRROR_TYPE(fatima_vme_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(fatimavme);
  STRUCT_MIRROR_ITEM_CTRL(bplast);
  STRUCT_MIRROR_TYPE(bplast_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bplast);
  STRUCT_MIRROR_ITEM_CTRL(bgo);
  STRUCT_MIRROR_TYPE(bgo_tamex_subevent) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(bgo);
  STRUCT_MIRROR_ITEM_CTRL(frsmain);
  STRUCT_MIRROR_TYPE(frs_main_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frsmain);
  STRUCT_MIRROR_ITEM_CTRL(frstpc);
  STRUCT_MIRROR_TYPE(frs_tpc_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frstpc);
  STRUCT_MIRROR_ITEM_CTRL(frsuser);
  STRUCT_MIRROR_TYPE(frs_user_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frsuser);
  STRUCT_MIRROR_ITEM_CTRL(frstpat);
  STRUCT_MIRROR_TYPE(frs_tpat_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(frstpat);
  STRUCT_MIRROR_ITEM_CTRL(beammonitor);
  STRUCT_MIRROR_TYPE(bm_subev) STRUCT_MIRROR_TYPE_TEMPLATE_FULL STRUCT_MIRROR_NAME(beammonitor);
  STRUCT_MIRROR_FCNS_DECL(unpack_event);
};
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
STRUCT_MIRROR_TEMPLATE
class STRUCT_MIRROR_STRUCT(unpack_sticky_event) : public STRUCT_MIRROR_BASE(unpack_sticky_event_base)
{
public:
  STRUCT_MIRROR_ITEM_CTRL_BASE(unpack_sticky_event_base);
  STRUCT_MIRROR_FCNS_DECL(unpack_sticky_event);
};
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_STRUCT *************************************************/


/** BEGIN_MIRROR_DECL_STRUCT *******************************************
 *
 * Mirror structure names.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_mirror_define.hh"

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(BAD_EVENT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(BARRIER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(DUMMY);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(ERR_WORD_SIX);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FATIMA_VME_SCALERS);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_EVENT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRACE);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_EVENT_TRACES);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(FEBEX_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V830);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(ZERO_FILLER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V7X5);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_HEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_DATA_V1290);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_ERROR);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_TRAILER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1290_N);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(MAIN_CRATE_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SPILL_OFF);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(SPILL_ON);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_EPOCH_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_HEADER);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_PADDING);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_TIME_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TAMEX4_SFP);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TDC_DATA_V1190);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TIMESTAMP_WHITERABBIT_EXTENDED);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TPAT_CRATE_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1190_N);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TPC_CRATE_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(TRIG3EVENT);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(USER_CRATE_DATA);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(VME_CAEN_V1751);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(WR_MULTI);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(aida_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(bgo_tamex_subevent);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(bm_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(bplast_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fatima_tamex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(fatima_vme_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(febex_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(frs_main_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(frs_tpat_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(frs_tpc_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(frs_user_subev);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_event);

STRUCT_MIRROR_TEMPLATE
struct STRUCT_MIRROR_STRUCT(unpack_sticky_event);

#include "gen/default_mirror_undef.hh"


/** END_MIRROR_DECL_STRUCT ********************************************/


/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_BAD_EVENT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(BAD_EVENT)::FCNCALL_NAME(BAD_EVENT)
{
  FCNCALL_INIT;
  // DATA8 bad;
  {
  FCNCALL_SUBNAME("bad");
  { FCNCALL_CALL_CTRL_WRAP(bad,bad.FCNCALL_CALL(bad)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_BAD_EVENT

#ifndef USER_DEF_BARRIER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(BARRIER)::FCNCALL_NAME(BARRIER)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_BARRIER

#ifndef USER_DEF_DUMMY
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(DUMMY)::FCNCALL_NAME(DUMMY)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_DUMMY

#ifndef USER_DEF_ERR_WORD_SIX
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(ERR_WORD_SIX)::FCNCALL_NAME(ERR_WORD_SIX)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_ERR_WORD_SIX

#ifndef USER_DEF_FATIMA_VME_SCALERS
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FATIMA_VME_SCALERS)::FCNCALL_NAME(FATIMA_VME_SCALERS)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FATIMA_VME_SCALERS

#ifndef USER_DEF_FEBEX_EVENT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_EVENT)::FCNCALL_NAME(FEBEX_EVENT)
{
  FCNCALL_INIT;
  // DATA8 trig;
  {
  FCNCALL_SUBNAME("trig");
  { FCNCALL_CALL_CTRL_WRAP(trig,trig.FCNCALL_CALL(trig)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_trigger_time_hi;
  {
  FCNCALL_SUBNAME("event_trigger_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(event_trigger_time_hi,event_trigger_time_hi.FCNCALL_CALL(event_trigger_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_trigger_time_lo;
  {
  FCNCALL_SUBNAME("event_trigger_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(event_trigger_time_lo,event_trigger_time_lo.FCNCALL_CALL(event_trigger_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 hit_pattern;
  {
  FCNCALL_SUBNAME("hit_pattern");
  { FCNCALL_CALL_CTRL_WRAP(hit_pattern,hit_pattern.FCNCALL_CALL(hit_pattern)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,16> channel_trigger_time_hi;
  {
  FCNCALL_SUBNAME("channel_trigger_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(channel_trigger_time_hi,channel_trigger_time_hi.FCNCALL_CALL(channel_trigger_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> channel_trigger_time_lo;
  {
  FCNCALL_SUBNAME("channel_trigger_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(channel_trigger_time_lo,channel_trigger_time_lo.FCNCALL_CALL(channel_trigger_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> pileup;
  {
  FCNCALL_SUBNAME("pileup");
  { FCNCALL_CALL_CTRL_WRAP(pileup,pileup.FCNCALL_CALL(pileup)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> overflow;
  {
  FCNCALL_SUBNAME("overflow");
  { FCNCALL_CALL_CTRL_WRAP(overflow,overflow.FCNCALL_CALL(overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> channel_cfd;
  {
  FCNCALL_SUBNAME("channel_cfd");
  { FCNCALL_CALL_CTRL_WRAP(channel_cfd,channel_cfd.FCNCALL_CALL(channel_cfd)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> channel_energy;
  {
  FCNCALL_SUBNAME("channel_energy");
  { FCNCALL_CALL_CTRL_WRAP(channel_energy,channel_energy.FCNCALL_CALL(channel_energy)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_EVENT

#ifndef USER_DEF_TRACE
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRACE)::FCNCALL_NAME(TRACE)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA16,DATA16,4000> traces[16];
  {
  FCNCALL_SUBNAME("traces");
  FCNCALL_FOR(__i0,16)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(traces__i0,,__i0,traces[__i0].FCNCALL_CALL(traces[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> channel_id_traces;
  {
  FCNCALL_SUBNAME("channel_id_traces");
  { FCNCALL_CALL_CTRL_WRAP(channel_id_traces,channel_id_traces.FCNCALL_CALL(channel_id_traces)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TRACE

#ifndef USER_DEF_FEBEX_EVENT_TRACES
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_EVENT_TRACES)::FCNCALL_NAME(FEBEX_EVENT_TRACES)
{
  FCNCALL_INIT;
  // DATA8 trig;
  {
  FCNCALL_SUBNAME("trig");
  { FCNCALL_CALL_CTRL_WRAP(trig,trig.FCNCALL_CALL(trig)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_trigger_time_hi;
  {
  FCNCALL_SUBNAME("event_trigger_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(event_trigger_time_hi,event_trigger_time_hi.FCNCALL_CALL(event_trigger_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_trigger_time_lo;
  {
  FCNCALL_SUBNAME("event_trigger_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(event_trigger_time_lo,event_trigger_time_lo.FCNCALL_CALL(event_trigger_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 hit_pattern;
  {
  FCNCALL_SUBNAME("hit_pattern");
  { FCNCALL_CALL_CTRL_WRAP(hit_pattern,hit_pattern.FCNCALL_CALL(hit_pattern)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 num_channels_fired;
  {
  FCNCALL_SUBNAME("num_channels_fired");
  { FCNCALL_CALL_CTRL_WRAP(num_channels_fired,num_channels_fired.FCNCALL_CALL(num_channels_fired)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA8 board_num;
  {
  FCNCALL_SUBNAME("board_num");
  { FCNCALL_CALL_CTRL_WRAP(board_num,board_num.FCNCALL_CALL(board_num)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> channel_id;
  {
  FCNCALL_SUBNAME("channel_id");
  { FCNCALL_CALL_CTRL_WRAP(channel_id,channel_id.FCNCALL_CALL(channel_id)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA16,DATA16,16> channel_trigger_time_hi;
  {
  FCNCALL_SUBNAME("channel_trigger_time_hi");
  { FCNCALL_CALL_CTRL_WRAP(channel_trigger_time_hi,channel_trigger_time_hi.FCNCALL_CALL(channel_trigger_time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> channel_trigger_time_lo;
  {
  FCNCALL_SUBNAME("channel_trigger_time_lo");
  { FCNCALL_CALL_CTRL_WRAP(channel_trigger_time_lo,channel_trigger_time_lo.FCNCALL_CALL(channel_trigger_time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> pileup;
  {
  FCNCALL_SUBNAME("pileup");
  { FCNCALL_CALL_CTRL_WRAP(pileup,pileup.FCNCALL_CALL(pileup)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> overflow;
  {
  FCNCALL_SUBNAME("overflow");
  { FCNCALL_CALL_CTRL_WRAP(overflow,overflow.FCNCALL_CALL(overflow)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA8,DATA8,16> channel_cfd;
  {
  FCNCALL_SUBNAME("channel_cfd");
  { FCNCALL_CALL_CTRL_WRAP(channel_cfd,channel_cfd.FCNCALL_CALL(channel_cfd)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,16> channel_energy;
  {
  FCNCALL_SUBNAME("channel_energy");
  { FCNCALL_CALL_CTRL_WRAP(channel_energy,channel_energy.FCNCALL_CALL(channel_energy)); }
  FCNCALL_SUBNAME_END;
  }
  // TRACE trace;
  {
  FCNCALL_SUBNAME("trace");
  { FCNCALL_CALL_CTRL_WRAP(trace,trace.FCNCALL_CALL(trace)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_EVENT_TRACES

#ifndef USER_DEF_FEBEX_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(FEBEX_PADDING)::FCNCALL_NAME(FEBEX_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_FEBEX_PADDING

#ifndef USER_DEF_VME_CAEN_V830
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V830)::FCNCALL_NAME(VME_CAEN_V830)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA32,DATA32,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 event_number : 16;
      // uint32 ts : 2;
      // uint32 count : 6;
      // uint32 undefined : 2;
      // uint32 unnamed_26_26 : 1;
      // uint32 geom : 5;
    // } ;
    // uint32 u32;
  // } header;
  {
  FCNCALL_SUBNAME("header");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 event_number : 16;
    // uint32 ts : 2;
    // uint32 count : 6;
    // uint32 undefined : 2;
    // uint32 unnamed_26_26 : 1;
    // uint32 geom : 5;
  // } ;
  // uint32 event_number : 16;
  {
  FCNCALL_SUBNAME("event_number");
  { FCNCALL_CALL_CTRL_WRAP(header.event_number,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.event_number)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 ts : 2;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(header.ts,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.ts)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 count : 6;
  {
  FCNCALL_SUBNAME("count");
  { FCNCALL_CALL_CTRL_WRAP(header.count,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.count)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 undefined : 2;
  {
  FCNCALL_SUBNAME("undefined");
  { FCNCALL_CALL_CTRL_WRAP(header.undefined,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.undefined)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 unnamed_26_26 : 1;
  {
  FCNCALL_SUBNAME("unnamed_26_26");
  { FCNCALL_CALL_CTRL_WRAP(header.unnamed_26_26,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.unnamed_26_26)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 geom : 5;
  {
  FCNCALL_SUBNAME("geom");
  { FCNCALL_CALL_CTRL_WRAP(header.geom,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,header.geom)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(header.u32,FCNCALL_CALL_TYPE(uint32,header.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V830

#ifndef USER_DEF_ZERO_FILLER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(ZERO_FILLER)::FCNCALL_NAME(ZERO_FILLER)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_ZERO_FILLER

#ifndef USER_DEF_VME_CAEN_V7X5
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V7X5)::FCNCALL_NAME(VME_CAEN_V7X5)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA24,DATA24,32> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V7X5

#ifndef USER_DEF_TDC_HEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_HEADER)::FCNCALL_NAME(TDC_HEADER)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_HEADER

#ifndef USER_DEF_TDC_DATA_V1290
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_DATA_V1290)::FCNCALL_NAME(TDC_DATA_V1290)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,128,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA8,DATA8,128,128> leadOrTrail;
  {
  FCNCALL_SUBNAME("leadOrTrail");
  { FCNCALL_CALL_CTRL_WRAP(leadOrTrail,leadOrTrail.FCNCALL_CALL(leadOrTrail)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_DATA_V1290

#ifndef USER_DEF_TDC_ERROR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_ERROR)::FCNCALL_NAME(TDC_ERROR)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_ERROR

#ifndef USER_DEF_TDC_TRAILER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_TRAILER)::FCNCALL_NAME(TDC_TRAILER)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_TRAILER

#ifndef USER_DEF_VME_CAEN_V1290_N
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1290_N)::FCNCALL_NAME(VME_CAEN_V1290_N)
{
  FCNCALL_INIT;
  // DATA8 geo;
  {
  FCNCALL_SUBNAME("geo");
  { FCNCALL_CALL_CTRL_WRAP(geo,geo.FCNCALL_CALL(geo)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_HEADER tdc_header;
  {
  FCNCALL_SUBNAME("tdc_header");
  { FCNCALL_CALL_CTRL_WRAP(tdc_header,tdc_header.FCNCALL_CALL(tdc_header)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_DATA_V1290 measurement;
  {
  FCNCALL_SUBNAME("measurement");
  { FCNCALL_CALL_CTRL_WRAP(measurement,measurement.FCNCALL_CALL(measurement)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_ERROR tdc_err;
  {
  FCNCALL_SUBNAME("tdc_err");
  { FCNCALL_CALL_CTRL_WRAP(tdc_err,tdc_err.FCNCALL_CALL(tdc_err)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_TRAILER tdc_trailer;
  {
  FCNCALL_SUBNAME("tdc_trailer");
  { FCNCALL_CALL_CTRL_WRAP(tdc_trailer,tdc_trailer.FCNCALL_CALL(tdc_trailer)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1290_N

#ifndef USER_DEF_MAIN_CRATE_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(MAIN_CRATE_DATA)::FCNCALL_NAME(MAIN_CRATE_DATA)
{
  FCNCALL_INIT;
  // BARRIER barrier0;
  {
  FCNCALL_SUBNAME("barrier0");
  { FCNCALL_CALL_CTRL_WRAP(barrier0,barrier0.FCNCALL_CALL(barrier0)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V830 v830;
  {
  FCNCALL_SUBNAME("v830");
  { FCNCALL_CALL_CTRL_WRAP(v830,v830.FCNCALL_CALL(v830)); }
  FCNCALL_SUBNAME_END;
  }
  // ZERO_FILLER filler0;
  {
  FCNCALL_SUBNAME("filler0");
  { FCNCALL_CALL_CTRL_WRAP(filler0,filler0.FCNCALL_CALL(filler0)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier1;
  {
  FCNCALL_SUBNAME("barrier1");
  { FCNCALL_CALL_CTRL_WRAP(barrier1,barrier1.FCNCALL_CALL(barrier1)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5 v792;
  {
  FCNCALL_SUBNAME("v792");
  { FCNCALL_CALL_CTRL_WRAP(v792,v792.FCNCALL_CALL(v792)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier2;
  {
  FCNCALL_SUBNAME("barrier2");
  { FCNCALL_CALL_CTRL_WRAP(barrier2,barrier2.FCNCALL_CALL(barrier2)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_N v1290;
  {
  FCNCALL_SUBNAME("v1290");
  { FCNCALL_CALL_CTRL_WRAP(v1290,v1290.FCNCALL_CALL(v1290)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_MAIN_CRATE_DATA

#ifndef USER_DEF_SPILL_OFF
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SPILL_OFF)::FCNCALL_NAME(SPILL_OFF)
{
  FCNCALL_INIT;
  // DATA8 spilloff;
  {
  FCNCALL_SUBNAME("spilloff");
  { FCNCALL_CALL_CTRL_WRAP(spilloff,spilloff.FCNCALL_CALL(spilloff)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SPILL_OFF

#ifndef USER_DEF_SPILL_ON
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(SPILL_ON)::FCNCALL_NAME(SPILL_ON)
{
  FCNCALL_INIT;
  // DATA8 spillon;
  {
  FCNCALL_SUBNAME("spillon");
  { FCNCALL_CALL_CTRL_WRAP(spillon,spillon.FCNCALL_CALL(spillon)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_SPILL_ON

#ifndef USER_DEF_TAMEX4_EPOCH_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_EPOCH_DATA)::FCNCALL_NAME(TAMEX4_EPOCH_DATA)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_EPOCH_DATA

#ifndef USER_DEF_TAMEX4_HEADER
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_HEADER)::FCNCALL_NAME(TAMEX4_HEADER)
{
  FCNCALL_INIT;
  // DATA16 post_trig_ns;
  {
  FCNCALL_SUBNAME("post_trig_ns");
  { FCNCALL_CALL_CTRL_WRAP(post_trig_ns,post_trig_ns.FCNCALL_CALL(post_trig_ns)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 pre_trig_ns;
  {
  FCNCALL_SUBNAME("pre_trig_ns");
  { FCNCALL_CALL_CTRL_WRAP(pre_trig_ns,pre_trig_ns.FCNCALL_CALL(pre_trig_ns)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_HEADER

#ifndef USER_DEF_TAMEX4_PADDING
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_PADDING)::FCNCALL_NAME(TAMEX4_PADDING)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_PADDING

#ifndef USER_DEF_TAMEX4_TIME_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_TIME_DATA)::FCNCALL_NAME(TAMEX4_TIME_DATA)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_TIME_DATA

#ifndef USER_DEF_TAMEX4_SFP
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TAMEX4_SFP)::FCNCALL_NAME(TAMEX4_SFP)
{
  FCNCALL_INIT;
  // DATA16 trig;
  {
  FCNCALL_SUBNAME("trig");
  { FCNCALL_CALL_CTRL_WRAP(trig,trig.FCNCALL_CALL(trig)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 event_size;
  {
  FCNCALL_SUBNAME("event_size");
  { FCNCALL_CALL_CTRL_WRAP(event_size,event_size.FCNCALL_CALL(event_size)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_coarse;
  {
  FCNCALL_SUBNAME("time_coarse");
  { FCNCALL_CALL_CTRL_WRAP(time_coarse,time_coarse.FCNCALL_CALL(time_coarse)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_fine;
  {
  FCNCALL_SUBNAME("time_fine");
  { FCNCALL_CALL_CTRL_WRAP(time_fine,time_fine.FCNCALL_CALL(time_fine)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_edge;
  {
  FCNCALL_SUBNAME("time_edge");
  { FCNCALL_CALL_CTRL_WRAP(time_edge,time_edge.FCNCALL_CALL(time_edge)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,1024> time_channel;
  {
  FCNCALL_SUBNAME("time_channel");
  { FCNCALL_CALL_CTRL_WRAP(time_channel,time_channel.FCNCALL_CALL(time_channel)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA32,DATA32,1024> time_epoch;
  {
  FCNCALL_SUBNAME("time_epoch");
  { FCNCALL_CALL_CTRL_WRAP(time_epoch,time_epoch.FCNCALL_CALL(time_epoch)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_EPOCH_DATA epoch;
  {
  FCNCALL_SUBNAME("epoch");
  { FCNCALL_CALL_CTRL_WRAP(epoch,epoch.FCNCALL_CALL(epoch)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_TIME_DATA time;
  {
  FCNCALL_SUBNAME("time");
  { FCNCALL_CALL_CTRL_WRAP(time,time.FCNCALL_CALL(time)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TAMEX4_SFP

#ifndef USER_DEF_TDC_DATA_V1190
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TDC_DATA_V1190)::FCNCALL_NAME(TDC_DATA_V1190)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,128,128> data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA8,DATA8,128,128> leadOrTrail;
  {
  FCNCALL_SUBNAME("leadOrTrail");
  { FCNCALL_CALL_CTRL_WRAP(leadOrTrail,leadOrTrail.FCNCALL_CALL(leadOrTrail)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TDC_DATA_V1190

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT)
{
  FCNCALL_INIT;
  // DATA12 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT

#ifndef USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TIMESTAMP_WHITERABBIT_EXTENDED)::FCNCALL_NAME(TIMESTAMP_WHITERABBIT_EXTENDED)
{
  FCNCALL_INIT;
  // DATA16 subsystem_id;
  {
  FCNCALL_SUBNAME("subsystem_id");
  { FCNCALL_CALL_CTRL_WRAP(subsystem_id,subsystem_id.FCNCALL_CALL(subsystem_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t1;
  {
  FCNCALL_SUBNAME("t1");
  { FCNCALL_CALL_CTRL_WRAP(t1,t1.FCNCALL_CALL(t1)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t2;
  {
  FCNCALL_SUBNAME("t2");
  { FCNCALL_CALL_CTRL_WRAP(t2,t2.FCNCALL_CALL(t2)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t3;
  {
  FCNCALL_SUBNAME("t3");
  { FCNCALL_CALL_CTRL_WRAP(t3,t3.FCNCALL_CALL(t3)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 t4;
  {
  FCNCALL_SUBNAME("t4");
  { FCNCALL_CALL_CTRL_WRAP(t4,t4.FCNCALL_CALL(t4)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TIMESTAMP_WHITERABBIT_EXTENDED

#ifndef USER_DEF_TPAT_CRATE_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TPAT_CRATE_DATA)::FCNCALL_NAME(TPAT_CRATE_DATA)
{
  FCNCALL_INIT;
  // DATA16 tpat;
  {
  FCNCALL_SUBNAME("tpat");
  { FCNCALL_CALL_CTRL_WRAP(tpat,tpat.FCNCALL_CALL(tpat)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 w1;
  {
  FCNCALL_SUBNAME("w1");
  { FCNCALL_CALL_CTRL_WRAP(w1,FCNCALL_CALL_TYPE(uint32,w1)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 w2;
  {
  FCNCALL_SUBNAME("w2");
  { FCNCALL_CALL_CTRL_WRAP(w2,FCNCALL_CALL_TYPE(uint32,w2)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 w3;
  {
  FCNCALL_SUBNAME("w3");
  { FCNCALL_CALL_CTRL_WRAP(w3,FCNCALL_CALL_TYPE(uint32,w3)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 pattern : 16;
      // uint32 nothing : 16;
    // } ;
    // uint32 u32;
  // } trigger_pattern;
  {
  FCNCALL_SUBNAME("trigger_pattern");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 pattern : 16;
    // uint32 nothing : 16;
  // } ;
  // uint32 pattern : 16;
  {
  FCNCALL_SUBNAME("pattern");
  { FCNCALL_CALL_CTRL_WRAP(trigger_pattern.pattern,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_pattern.pattern)); }
  FCNCALL_SUBNAME_END;
  }
  // uint32 nothing : 16;
  {
  FCNCALL_SUBNAME("nothing");
  { FCNCALL_CALL_CTRL_WRAP(trigger_pattern.nothing,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,trigger_pattern.nothing)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(trigger_pattern.u32,FCNCALL_CALL_TYPE(uint32,trigger_pattern.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TPAT_CRATE_DATA

#ifndef USER_DEF_VME_CAEN_V1190_N
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1190_N)::FCNCALL_NAME(VME_CAEN_V1190_N)
{
  FCNCALL_INIT;
  // DATA8 geo;
  {
  FCNCALL_SUBNAME("geo");
  { FCNCALL_CALL_CTRL_WRAP(geo,geo.FCNCALL_CALL(geo)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_HEADER tdc_header;
  {
  FCNCALL_SUBNAME("tdc_header");
  { FCNCALL_CALL_CTRL_WRAP(tdc_header,tdc_header.FCNCALL_CALL(tdc_header)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_DATA_V1190 measurement;
  {
  FCNCALL_SUBNAME("measurement");
  { FCNCALL_CALL_CTRL_WRAP(measurement,measurement.FCNCALL_CALL(measurement)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_ERROR tdc_error;
  {
  FCNCALL_SUBNAME("tdc_error");
  { FCNCALL_CALL_CTRL_WRAP(tdc_error,tdc_error.FCNCALL_CALL(tdc_error)); }
  FCNCALL_SUBNAME_END;
  }
  // TDC_TRAILER tdc_trailer;
  {
  FCNCALL_SUBNAME("tdc_trailer");
  { FCNCALL_CALL_CTRL_WRAP(tdc_trailer,tdc_trailer.FCNCALL_CALL(tdc_trailer)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1190_N

#ifndef USER_DEF_TPC_CRATE_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TPC_CRATE_DATA)::FCNCALL_NAME(TPC_CRATE_DATA)
{
  FCNCALL_INIT;
  // BARRIER barrier0;
  {
  FCNCALL_SUBNAME("barrier0");
  { FCNCALL_CALL_CTRL_WRAP(barrier0,barrier0.FCNCALL_CALL(barrier0)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5 v785;
  {
  FCNCALL_SUBNAME("v785");
  { FCNCALL_CALL_CTRL_WRAP(v785,v785.FCNCALL_CALL(v785)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5 v775;
  {
  FCNCALL_SUBNAME("v775");
  { FCNCALL_CALL_CTRL_WRAP(v775,v775.FCNCALL_CALL(v775)); }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier[3];
  {
  FCNCALL_SUBNAME("barrier");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(barrier__i0,,__i0,barrier[__i0].FCNCALL_CALL(barrier[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1190_N v1190;
  {
  FCNCALL_SUBNAME("v1190");
  { FCNCALL_CALL_CTRL_WRAP(v1190,v1190.FCNCALL_CALL(v1190)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_TPC_CRATE_DATA

#ifndef USER_DEF_TRIG3EVENT
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(TRIG3EVENT)::FCNCALL_NAME(TRIG3EVENT)
{
  FCNCALL_INIT;
  FCNCALL_RET;
}
#endif//USER_DEF_TRIG3EVENT

#ifndef USER_DEF_USER_CRATE_DATA
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(USER_CRATE_DATA)::FCNCALL_NAME(USER_CRATE_DATA)
{
  FCNCALL_INIT;
  // BARRIER barrier1;
  {
  FCNCALL_SUBNAME("barrier1");
  { FCNCALL_CALL_CTRL_WRAP(barrier1,barrier1.FCNCALL_CALL(barrier1)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5 v775[2];
  {
  FCNCALL_SUBNAME("v775");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(v775__i0,,__i0,v775[__i0].FCNCALL_CALL(v775[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V7X5 v785[2];
  {
  FCNCALL_SUBNAME("v785");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(v785__i0,,__i0,v785[__i0].FCNCALL_CALL(v785[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // BARRIER barrier0;
  {
  FCNCALL_SUBNAME("barrier0");
  { FCNCALL_CALL_CTRL_WRAP(barrier0,barrier0.FCNCALL_CALL(barrier0)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V830 v830;
  {
  FCNCALL_SUBNAME("v830");
  { FCNCALL_CALL_CTRL_WRAP(v830,v830.FCNCALL_CALL(v830)); }
  FCNCALL_SUBNAME_END;
  }
  // ZERO_FILLER filler0;
  {
  FCNCALL_SUBNAME("filler0");
  { FCNCALL_CALL_CTRL_WRAP(filler0,filler0.FCNCALL_CALL(filler0)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_USER_CRATE_DATA

#ifndef USER_DEF_VME_CAEN_V1751
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(VME_CAEN_V1751)::FCNCALL_NAME(VME_CAEN_V1751)
{
  FCNCALL_INIT;
  // DATA8 board_id;
  {
  FCNCALL_SUBNAME("board_id");
  { FCNCALL_CALL_CTRL_WRAP(board_id,board_id.FCNCALL_CALL(board_id)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA8 channels;
  {
  FCNCALL_SUBNAME("channels");
  { FCNCALL_CALL_CTRL_WRAP(channels,channels.FCNCALL_CALL(channels)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 board_time;
  {
  FCNCALL_SUBNAME("board_time");
  { FCNCALL_CALL_CTRL_WRAP(board_time,board_time.FCNCALL_CALL(board_time)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA32,DATA32,64> channel_time;
  {
  FCNCALL_SUBNAME("channel_time");
  { FCNCALL_CALL_CTRL_WRAP(channel_time,channel_time.FCNCALL_CALL(channel_time)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,64> chan_ext_time;
  {
  FCNCALL_SUBNAME("chan_ext_time");
  { FCNCALL_CALL_CTRL_WRAP(chan_ext_time,chan_ext_time.FCNCALL_CALL(chan_ext_time)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA12,DATA12,64> chan_fine_time;
  {
  FCNCALL_SUBNAME("chan_fine_time");
  { FCNCALL_CALL_CTRL_WRAP(chan_fine_time,chan_fine_time.FCNCALL_CALL(chan_fine_time)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,64> qshort;
  {
  FCNCALL_SUBNAME("qshort");
  { FCNCALL_CALL_CTRL_WRAP(qshort,qshort.FCNCALL_CALL(qshort)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA16,DATA16,64> qlong;
  {
  FCNCALL_SUBNAME("qlong");
  { FCNCALL_CALL_CTRL_WRAP(qlong,qlong.FCNCALL_CALL(qlong)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_VME_CAEN_V1751

#ifndef USER_DEF_WR_MULTI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(WR_MULTI)::FCNCALL_NAME(WR_MULTI)
{
  FCNCALL_INIT;
  // DATA32 time_hi;
  {
  FCNCALL_SUBNAME("time_hi");
  { FCNCALL_CALL_CTRL_WRAP(time_hi,time_hi.FCNCALL_CALL(time_hi)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA32 time_lo;
  {
  FCNCALL_SUBNAME("time_lo");
  { FCNCALL_CALL_CTRL_WRAP(time_lo,time_lo.FCNCALL_CALL(time_lo)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_WR_MULTI

#ifndef USER_DEF_aida_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(aida_subev)::FCNCALL_NAME(aida_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // EXT_AIDA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_aida_subev

#ifndef USER_DEF_bgo_tamex_subevent
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(bgo_tamex_subevent)::FCNCALL_NAME(bgo_tamex_subevent)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT_EXTENDED ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // union 
  // {
    // struct 
    // {
      // uint32 b : 32;
    // } ;
    // uint32 u32;
  // } be;
  {
  FCNCALL_SUBNAME("be");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 b : 32;
  // } ;
  // uint32 b : 32;
  {
  FCNCALL_SUBNAME("b");
  { FCNCALL_CALL_CTRL_WRAP(be.b,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,be.b)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(be.u32,FCNCALL_CALL_TYPE(uint32,be.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_HEADER trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window,trigger_window.FCNCALL_CALL(trigger_window)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_SFP tamex[3];
  {
  FCNCALL_SUBNAME("tamex");
  FCNCALL_FOR(__i0,3)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tamex__i0,,__i0,tamex[__i0].FCNCALL_CALL(tamex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_bgo_tamex_subevent

#ifndef USER_DEF_bm_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(bm_subev)::FCNCALL_NAME(bm_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // raw_list_ii_zero_suppress<DATA32,DATA32,100000> dataS2;
  {
  FCNCALL_SUBNAME("dataS2");
  { FCNCALL_CALL_CTRL_WRAP(dataS2,dataS2.FCNCALL_CALL(dataS2)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_list_ii_zero_suppress<DATA32,DATA32,100000> dataS4;
  {
  FCNCALL_SUBNAME("dataS4");
  { FCNCALL_CALL_CTRL_WRAP(dataS4,dataS4.FCNCALL_CALL(dataS4)); }
  FCNCALL_SUBNAME_END;
  }
  // TIMESTAMP_WHITERABBIT_EXTENDED ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_bm_subev

#ifndef USER_DEF_bplast_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(bplast_subev)::FCNCALL_NAME(bplast_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_HEADER trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window,trigger_window.FCNCALL_CALL(trigger_window)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_SFP tamex[9];
  {
  FCNCALL_SUBNAME("tamex");
  FCNCALL_FOR(__i0,9)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tamex__i0,,__i0,tamex[__i0].FCNCALL_CALL(tamex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_bplast_subev

#ifndef USER_DEF_fatima_tamex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fatima_tamex_subev)::FCNCALL_NAME(fatima_tamex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT_EXTENDED ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_HEADER trigger_window;
  {
  FCNCALL_SUBNAME("trigger_window");
  { FCNCALL_CALL_CTRL_WRAP(trigger_window,trigger_window.FCNCALL_CALL(trigger_window)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // TAMEX4_SFP tamex[4];
  {
  FCNCALL_SUBNAME("tamex");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(tamex__i0,,__i0,tamex[__i0].FCNCALL_CALL(tamex[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fatima_tamex_subev

#ifndef USER_DEF_fatima_vme_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(fatima_vme_subev)::FCNCALL_NAME(fatima_vme_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT_EXTENDED ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // ERR_WORD_SIX error1;
  {
  FCNCALL_SUBNAME("error1");
  { FCNCALL_CALL_CTRL_WRAP(error1,error1.FCNCALL_CALL(error1)); }
  FCNCALL_SUBNAME_END;
  }
  // FATIMA_VME_SCALERS scalers;
  {
  FCNCALL_SUBNAME("scalers");
  { FCNCALL_CALL_CTRL_WRAP(scalers,scalers.FCNCALL_CALL(scalers)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1751 qdc1;
  {
  FCNCALL_SUBNAME("qdc1");
  { FCNCALL_CALL_CTRL_WRAP(qdc1,qdc1.FCNCALL_CALL(qdc1)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1751 qdc2;
  {
  FCNCALL_SUBNAME("qdc2");
  { FCNCALL_CALL_CTRL_WRAP(qdc2,qdc2.FCNCALL_CALL(qdc2)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1751 qdc3;
  {
  FCNCALL_SUBNAME("qdc3");
  { FCNCALL_CALL_CTRL_WRAP(qdc3,qdc3.FCNCALL_CALL(qdc3)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1751 qdc4;
  {
  FCNCALL_SUBNAME("qdc4");
  { FCNCALL_CALL_CTRL_WRAP(qdc4,qdc4.FCNCALL_CALL(qdc4)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1751 qdc5;
  {
  FCNCALL_SUBNAME("qdc5");
  { FCNCALL_CALL_CTRL_WRAP(qdc5,qdc5.FCNCALL_CALL(qdc5)); }
  FCNCALL_SUBNAME_END;
  }
  // ERR_WORD_SIX error2;
  {
  FCNCALL_SUBNAME("error2");
  { FCNCALL_CALL_CTRL_WRAP(error2,error2.FCNCALL_CALL(error2)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_N tdc1;
  {
  FCNCALL_SUBNAME("tdc1");
  { FCNCALL_CALL_CTRL_WRAP(tdc1,tdc1.FCNCALL_CALL(tdc1)); }
  FCNCALL_SUBNAME_END;
  }
  // ERR_WORD_SIX error3;
  {
  FCNCALL_SUBNAME("error3");
  { FCNCALL_CALL_CTRL_WRAP(error3,error3.FCNCALL_CALL(error3)); }
  FCNCALL_SUBNAME_END;
  }
  // VME_CAEN_V1290_N tdc2;
  {
  FCNCALL_SUBNAME("tdc2");
  { FCNCALL_CALL_CTRL_WRAP(tdc2,tdc2.FCNCALL_CALL(tdc2)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_fatima_vme_subev

#ifndef USER_DEF_febex_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(febex_subev)::FCNCALL_NAME(febex_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT ts;
  {
  FCNCALL_SUBNAME("ts");
  { FCNCALL_CALL_CTRL_WRAP(ts,ts.FCNCALL_CALL(ts)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_PADDING padding;
  {
  FCNCALL_SUBNAME("padding");
  { FCNCALL_CALL_CTRL_WRAP(padding,padding.FCNCALL_CALL(padding)); }
  FCNCALL_SUBNAME_END;
  }
  // FEBEX_EVENT data[4];
  {
  FCNCALL_SUBNAME("data");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(data__i0,,__i0,data[__i0].FCNCALL_CALL(data[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_febex_subev

#ifndef USER_DEF_frs_main_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(frs_main_subev)::FCNCALL_NAME(frs_main_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRIG3EVENT trig3;
  {
  FCNCALL_SUBNAME("trig3");
  { FCNCALL_CALL_CTRL_WRAP(trig3,trig3.FCNCALL_CALL(trig3)); }
  FCNCALL_SUBNAME_END;
  }
  // SPILL_ON spill_on;
  {
  FCNCALL_SUBNAME("spill_on");
  { FCNCALL_CALL_CTRL_WRAP(spill_on,spill_on.FCNCALL_CALL(spill_on)); }
  FCNCALL_SUBNAME_END;
  }
  // SPILL_OFF spill_off;
  {
  FCNCALL_SUBNAME("spill_off");
  { FCNCALL_CALL_CTRL_WRAP(spill_off,spill_off.FCNCALL_CALL(spill_off)); }
  FCNCALL_SUBNAME_END;
  }
  // MAIN_CRATE_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_frs_main_subev

#ifndef USER_DEF_frs_tpat_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(frs_tpat_subev)::FCNCALL_NAME(frs_tpat_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TIMESTAMP_WHITERABBIT wr;
  {
  FCNCALL_SUBNAME("wr");
  { FCNCALL_CALL_CTRL_WRAP(wr,wr.FCNCALL_CALL(wr)); }
  FCNCALL_SUBNAME_END;
  }
  // TRIG3EVENT trig3;
  {
  FCNCALL_SUBNAME("trig3");
  { FCNCALL_CALL_CTRL_WRAP(trig3,trig3.FCNCALL_CALL(trig3)); }
  FCNCALL_SUBNAME_END;
  }
  // TPAT_CRATE_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_frs_tpat_subev

#ifndef USER_DEF_frs_tpc_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(frs_tpc_subev)::FCNCALL_NAME(frs_tpc_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // union 
  // {
    // struct 
    // {
      // uint32 b : 32;
    // } ;
    // uint32 u32;
  // } be;
  {
  FCNCALL_SUBNAME("be");
#if !STRUCT_ONLY_LAST_UNION_MEMBER
  // struct 
  // {
    // uint32 b : 32;
  // } ;
  // uint32 b : 32;
  {
  FCNCALL_SUBNAME("b");
  { FCNCALL_CALL_CTRL_WRAP(be.b,FCNCALL_CALL_TYPE/*_BITFIELD*/(uint32,be.b)); }
  FCNCALL_SUBNAME_END;
  }
#endif// !STRUCT_ONLY_LAST_UNION_MEMBER
  // uint32 u32;
  {
  FCNCALL_SUBNAME("u32");
  { FCNCALL_CALL_CTRL_WRAP(be.u32,FCNCALL_CALL_TYPE(uint32,be.u32)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_SUBNAME_END;
  }
  // TRIG3EVENT trig3;
  {
  FCNCALL_SUBNAME("trig3");
  { FCNCALL_CALL_CTRL_WRAP(trig3,trig3.FCNCALL_CALL(trig3)); }
  FCNCALL_SUBNAME_END;
  }
  // SPILL_ON spill_on;
  {
  FCNCALL_SUBNAME("spill_on");
  { FCNCALL_CALL_CTRL_WRAP(spill_on,spill_on.FCNCALL_CALL(spill_on)); }
  FCNCALL_SUBNAME_END;
  }
  // SPILL_OFF spill_off;
  {
  FCNCALL_SUBNAME("spill_off");
  { FCNCALL_CALL_CTRL_WRAP(spill_off,spill_off.FCNCALL_CALL(spill_off)); }
  FCNCALL_SUBNAME_END;
  }
  // TPC_CRATE_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_frs_tpc_subev

#ifndef USER_DEF_frs_user_subev
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(frs_user_subev)::FCNCALL_NAME(frs_user_subev)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_subevent_base,FCNCALL_CLASS_NAME(unpack_subevent_base)::FCNCALL_CALL_BASE());
  // TRIG3EVENT trig3;
  {
  FCNCALL_SUBNAME("trig3");
  { FCNCALL_CALL_CTRL_WRAP(trig3,trig3.FCNCALL_CALL(trig3)); }
  FCNCALL_SUBNAME_END;
  }
  // SPILL_ON spill_on;
  {
  FCNCALL_SUBNAME("spill_on");
  { FCNCALL_CALL_CTRL_WRAP(spill_on,spill_on.FCNCALL_CALL(spill_on)); }
  FCNCALL_SUBNAME_END;
  }
  // SPILL_OFF spill_off;
  {
  FCNCALL_SUBNAME("spill_off");
  { FCNCALL_CALL_CTRL_WRAP(spill_off,spill_off.FCNCALL_CALL(spill_off)); }
  FCNCALL_SUBNAME_END;
  }
  // USER_CRATE_DATA data;
  {
  FCNCALL_SUBNAME("data");
  { FCNCALL_CALL_CTRL_WRAP(data,data.FCNCALL_CALL(data)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_frs_user_subev

#ifndef USER_DEF_unpack_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_event)::FCNCALL_NAME(unpack_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_event_base,FCNCALL_CLASS_NAME(unpack_event_base)::FCNCALL_CALL_BASE());
  // aida_subev aida;
  {
  FCNCALL_SUBNAME("aida");
  { FCNCALL_CALL_CTRL_WRAP(aida,aida.FCNCALL_CALL(aida)); }
  FCNCALL_SUBNAME_END;
  }
  // febex_subev germanium;
  {
  FCNCALL_SUBNAME("germanium");
  { FCNCALL_CALL_CTRL_WRAP(germanium,germanium.FCNCALL_CALL(germanium)); }
  FCNCALL_SUBNAME_END;
  }
  // fatima_tamex_subev fatima;
  {
  FCNCALL_SUBNAME("fatima");
  { FCNCALL_CALL_CTRL_WRAP(fatima,fatima.FCNCALL_CALL(fatima)); }
  FCNCALL_SUBNAME_END;
  }
  // fatima_vme_subev fatimavme;
  {
  FCNCALL_SUBNAME("fatimavme");
  { FCNCALL_CALL_CTRL_WRAP(fatimavme,fatimavme.FCNCALL_CALL(fatimavme)); }
  FCNCALL_SUBNAME_END;
  }
  // bplast_subev bplast;
  {
  FCNCALL_SUBNAME("bplast");
  { FCNCALL_CALL_CTRL_WRAP(bplast,bplast.FCNCALL_CALL(bplast)); }
  FCNCALL_SUBNAME_END;
  }
  // bgo_tamex_subevent bgo;
  {
  FCNCALL_SUBNAME("bgo");
  { FCNCALL_CALL_CTRL_WRAP(bgo,bgo.FCNCALL_CALL(bgo)); }
  FCNCALL_SUBNAME_END;
  }
  // frs_main_subev frsmain;
  {
  FCNCALL_SUBNAME("frsmain");
  { FCNCALL_CALL_CTRL_WRAP(frsmain,frsmain.FCNCALL_CALL(frsmain)); }
  FCNCALL_SUBNAME_END;
  }
  // frs_tpc_subev frstpc;
  {
  FCNCALL_SUBNAME("frstpc");
  { FCNCALL_CALL_CTRL_WRAP(frstpc,frstpc.FCNCALL_CALL(frstpc)); }
  FCNCALL_SUBNAME_END;
  }
  // frs_user_subev frsuser;
  {
  FCNCALL_SUBNAME("frsuser");
  { FCNCALL_CALL_CTRL_WRAP(frsuser,frsuser.FCNCALL_CALL(frsuser)); }
  FCNCALL_SUBNAME_END;
  }
  // frs_tpat_subev frstpat;
  {
  FCNCALL_SUBNAME("frstpat");
  { FCNCALL_CALL_CTRL_WRAP(frstpat,frstpat.FCNCALL_CALL(frstpat)); }
  FCNCALL_SUBNAME_END;
  }
  // bm_subev beammonitor;
  {
  FCNCALL_SUBNAME("beammonitor");
  { FCNCALL_CALL_CTRL_WRAP(beammonitor,beammonitor.FCNCALL_CALL(beammonitor)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_event

#ifndef USER_DEF_unpack_sticky_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(unpack_sticky_event)::FCNCALL_NAME(unpack_sticky_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(unpack_sticky_event_base,FCNCALL_CLASS_NAME(unpack_sticky_event_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_unpack_sticky_event

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/


/** BEGIN_CORR_STRUCT **************************************************
 *
 * Correlation structure.
 *
 * Do not edit - automatically generated.
 */

// Corr struct for: BAD_EVENT
// DATA8  .bad
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BAD_EVENT
// .BAD_EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BAD_EVENT
// .BAD_EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BAD_EVENT
// .BAD_EVENT
// Corr struct for: BARRIER
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: BARRIER
// .BARRIER
// Corr struct for: DUMMY
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: DUMMY
// .DUMMY
// Corr struct for: ERR_WORD_SIX
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ERR_WORD_SIX
// .ERR_WORD_SIX// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ERR_WORD_SIX
// .ERR_WORD_SIX// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ERR_WORD_SIX
// .ERR_WORD_SIX
// Corr struct for: FATIMA_VME_SCALERS
// raw_array_zero_suppress  .data(DATA32)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FATIMA_VME_SCALERS
// .FATIMA_VME_SCALERS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FATIMA_VME_SCALERS
// .FATIMA_VME_SCALERS// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FATIMA_VME_SCALERS
// .FATIMA_VME_SCALERS
// Corr struct for: FEBEX_EVENT
// DATA8  .trig
  // ---
// DATA32  .event_trigger_time_hi
  // ---
// DATA32  .event_trigger_time_lo
  // ---
// DATA16  .hit_pattern
// raw_array_zero_suppress  .channel_trigger_time_hi(DATA16)[16]
// raw_array_zero_suppress  .channel_trigger_time_lo(DATA32)[16]
  // ---
// raw_array_zero_suppress  .pileup(DATA8)[16]
  // ---
// raw_array_zero_suppress  .overflow(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_cfd(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_energy(DATA32)[16]
  // ---
// DATA16 .hit_pattern
// DATA16 .channel_trigger_time_hi[16]
// 
// size= 1  chunks= 17  mem=  17  line=34  total=578
// size=16  chunks=  2  mem=  32  line=34  total=578
// size=17  chunks=  1  mem=  17  line=18  total=306
// 
// corr structure: FEBEX_EVENT
  // DATA16 .hit_pattern
  // DATA16 .channel_trigger_time_hi[16]
// .FEBEX_EVENT/17/.hit_pattern
                // .channel_trigger_time_hi/16/[16]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENT
// .FEBEX_EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENT
// .FEBEX_EVENT
// Corr struct for: TRACE
// raw_array_zero_suppress  .traces[16](DATA16)[4000]
// raw_array_zero_suppress  .channel_id_traces(DATA8)[16]
  // ---
// DATA16 .traces[16][4000]
// 
// size= 1  chunks=64000  mem=64000  line=128000  total=-397934592
// size=4000  chunks= 16  mem=64000  line=64016  total=-197943296
// size=64000  chunks=  1  mem=64000  line=64001  total=-198903296
// 
// corr structure: TRACE
  // DATA16 .traces[16][4000]
// .TRACE/64000/.traces/64000/[16]/4000/[4000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRACE
// .TRACE// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRACE
// .TRACE
// Corr struct for: FEBEX_EVENT_TRACES
// DATA8  .trig
  // ---
// DATA32  .event_trigger_time_hi
  // ---
// DATA32  .event_trigger_time_lo
  // ---
// DATA16  .hit_pattern
// DATA32  .num_channels_fired
  // ---
// DATA8  .board_num
  // ---
// raw_array_zero_suppress  .channel_id(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_trigger_time_hi(DATA16)[16]
// raw_array_zero_suppress  .channel_trigger_time_lo(DATA32)[16]
  // ---
// raw_array_zero_suppress  .pileup(DATA8)[16]
  // ---
// raw_array_zero_suppress  .overflow(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_cfd(DATA8)[16]
  // ---
// raw_array_zero_suppress  .channel_energy(DATA32)[16]
  // ---
// TRACE  .trace
  // raw_array_zero_suppress  .traces[16](DATA16)[4000]
  // raw_array_zero_suppress  .channel_id_traces(DATA8)[16]
    // ---
// DATA16 .hit_pattern
// DATA16 .channel_trigger_time_hi[16]
// DATA16 .trace.traces[16][4000]
// 
// size= 1  chunks=64017  mem=64017  line=128034  total=-393582014
// size=16  chunks=64002  mem=1024032  line=1088034  total=933195842
// size=4000  chunks= 18  mem=72000  line=72018  total=315409010
// size=64000  chunks=  3  mem=192000  line=192003  total=-593445837
// size=64017  chunks=  1  mem=64017  line=64018  total=-196726990
// 
// corr structure: FEBEX_EVENT_TRACES
  // DATA16 .hit_pattern
  // DATA16 .channel_trigger_time_hi[16]
  // DATA16 .trace.traces[16][4000]
// .FEBEX_EVENT_TRACES/64017/.hit_pattern
                          // .channel_trigger_time_hi/16/[16]
                          // .trace/64000/.traces/64000/[16]/4000/[4000]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENT_TRACES
// .FEBEX_EVENT_TRACES// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_EVENT_TRACES
// .FEBEX_EVENT_TRACES
// Corr struct for: FEBEX_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: FEBEX_PADDING
// .FEBEX_PADDING
// Corr struct for: VME_CAEN_V830
// raw_array_zero_suppress  .data(DATA32)[32]
  // ---
// uint32  .event_number
  // ---
// uint32  .ts
  // ---
// uint32  .count
  // ---
// uint32  .undefined
  // ---
// uint32  .unnamed_26_26
  // ---
// uint32  .geom
  // ---
// uint32  .u32
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V830
// .VME_CAEN_V830
// Corr struct for: ZERO_FILLER
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ZERO_FILLER
// .ZERO_FILLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ZERO_FILLER
// .ZERO_FILLER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: ZERO_FILLER
// .ZERO_FILLER
// Corr struct for: VME_CAEN_V7X5
// raw_array_zero_suppress  .data(DATA24)[32]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V7X5
// .VME_CAEN_V7X5// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V7X5
// .VME_CAEN_V7X5// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V7X5
// .VME_CAEN_V7X5
// Corr struct for: TDC_HEADER
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_HEADER
// .TDC_HEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_HEADER
// .TDC_HEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_HEADER
// .TDC_HEADER
// Corr struct for: TDC_DATA_V1290
// raw_array_multi_zero_suppress  .data(DATA24)[128][128]
  // ---
// raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1290
// .TDC_DATA_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1290
// .TDC_DATA_V1290// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1290
// .TDC_DATA_V1290
// Corr struct for: TDC_ERROR
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_ERROR
// .TDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_ERROR
// .TDC_ERROR// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_ERROR
// .TDC_ERROR
// Corr struct for: TDC_TRAILER
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_TRAILER
// .TDC_TRAILER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_TRAILER
// .TDC_TRAILER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_TRAILER
// .TDC_TRAILER
// Corr struct for: VME_CAEN_V1290_N
// DATA8  .geo
  // ---
// TDC_HEADER  .tdc_header
// TDC_DATA_V1290  .measurement
  // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
    // ---
  // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
    // ---
// TDC_ERROR  .tdc_err
// TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_N
// .VME_CAEN_V1290_N// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_N
// .VME_CAEN_V1290_N// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1290_N
// .VME_CAEN_V1290_N
// Corr struct for: MAIN_CRATE_DATA
// BARRIER  .barrier0
// VME_CAEN_V830  .v830
  // raw_array_zero_suppress  .data(DATA32)[32]
    // ---
  // uint32  .event_number
    // ---
  // uint32  .ts
    // ---
  // uint32  .count
    // ---
  // uint32  .undefined
    // ---
  // uint32  .unnamed_26_26
    // ---
  // uint32  .geom
    // ---
  // uint32  .u32
    // ---
// ZERO_FILLER  .filler0
// BARRIER  .barrier1
// VME_CAEN_V7X5  .v792
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// BARRIER  .barrier2
// VME_CAEN_V1290_N  .v1290
  // DATA8  .geo
    // ---
  // TDC_HEADER  .tdc_header
  // TDC_DATA_V1290  .measurement
    // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
      // ---
    // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
      // ---
  // TDC_ERROR  .tdc_err
  // TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MAIN_CRATE_DATA
// .MAIN_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MAIN_CRATE_DATA
// .MAIN_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: MAIN_CRATE_DATA
// .MAIN_CRATE_DATA
// Corr struct for: SPILL_OFF
// DATA8  .spilloff
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SPILL_OFF
// .SPILL_OFF// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SPILL_OFF
// .SPILL_OFF// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SPILL_OFF
// .SPILL_OFF
// Corr struct for: SPILL_ON
// DATA8  .spillon
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SPILL_ON
// .SPILL_ON// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SPILL_ON
// .SPILL_ON// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: SPILL_ON
// .SPILL_ON
// Corr struct for: TAMEX4_EPOCH_DATA
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_EPOCH_DATA
// .TAMEX4_EPOCH_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_EPOCH_DATA
// .TAMEX4_EPOCH_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_EPOCH_DATA
// .TAMEX4_EPOCH_DATA
// Corr struct for: TAMEX4_HEADER
// DATA16  .post_trig_ns
// DATA16  .pre_trig_ns
// DATA16 .post_trig_ns
// DATA16 .pre_trig_ns
// 
// size= 1  chunks=  2  mem=   2  line=4  total=8
// size= 2  chunks=  1  mem=   2  line=3  total=6
// 
// corr structure: TAMEX4_HEADER
  // DATA16 .post_trig_ns
  // DATA16 .pre_trig_ns
// .TAMEX4_HEADER/2/.post_trig_ns
                 // .pre_trig_ns// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_HEADER
// .TAMEX4_HEADER// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_HEADER
// .TAMEX4_HEADER
// Corr struct for: TAMEX4_PADDING
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_PADDING
// .TAMEX4_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_PADDING
// .TAMEX4_PADDING// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_PADDING
// .TAMEX4_PADDING
// Corr struct for: TAMEX4_TIME_DATA
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_TIME_DATA
// .TAMEX4_TIME_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_TIME_DATA
// .TAMEX4_TIME_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_TIME_DATA
// .TAMEX4_TIME_DATA
// Corr struct for: TAMEX4_SFP
// DATA16  .trig
// DATA32  .event_size
  // ---
// raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
// raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
// raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
// raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
// raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
  // ---
// TAMEX4_EPOCH_DATA  .epoch
// TAMEX4_TIME_DATA  .time
// DATA16 .trig
// DATA12 .time_coarse[1024]
// DATA12 .time_fine[1024]
// DATA12 .time_edge[1024]
// DATA12 .time_channel[1024]
// 
// size= 1  chunks=4097  mem=4097  line=8194  total=33570818
// size=1024  chunks=  5  mem=5120  line=5125  total=20997125
// size=4097  chunks=  1  mem=4097  line=4098  total=16789506
// 
// corr structure: TAMEX4_SFP
  // DATA16 .trig
  // DATA12 .time_coarse[1024]
  // DATA12 .time_fine[1024]
  // DATA12 .time_edge[1024]
  // DATA12 .time_channel[1024]
// .TAMEX4_SFP/4097/.trig
                 // .time_coarse/1024/[1024]
                 // .time_fine/1024/[1024]
                 // .time_edge/1024/[1024]
                 // .time_channel/1024/[1024]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_SFP
// .TAMEX4_SFP// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TAMEX4_SFP
// .TAMEX4_SFP
// Corr struct for: TDC_DATA_V1190
// raw_array_multi_zero_suppress  .data(DATA24)[128][128]
  // ---
// raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1190
// .TDC_DATA_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1190
// .TDC_DATA_V1190// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TDC_DATA_V1190
// .TDC_DATA_V1190
// Corr struct for: TIMESTAMP_WHITERABBIT
// DATA12  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA12 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT
  // DATA12 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT/5/.subsystem_id
                         // .t1
                         // .t2
                         // .t3
                         // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT
// .TIMESTAMP_WHITERABBIT
// Corr struct for: TIMESTAMP_WHITERABBIT_EXTENDED
// DATA16  .subsystem_id
// DATA16  .t1
// DATA16  .t2
// DATA16  .t3
// DATA16  .t4
// DATA16 .subsystem_id
// DATA16 .t1
// DATA16 .t2
// DATA16 .t3
// DATA16 .t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
  // DATA16 .subsystem_id
  // DATA16 .t1
  // DATA16 .t2
  // DATA16 .t3
  // DATA16 .t4
// .TIMESTAMP_WHITERABBIT_EXTENDED/5/.subsystem_id
                                  // .t1
                                  // .t2
                                  // .t3
                                  // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
// .TIMESTAMP_WHITERABBIT_EXTENDED// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TIMESTAMP_WHITERABBIT_EXTENDED
// .TIMESTAMP_WHITERABBIT_EXTENDED
// Corr struct for: TPAT_CRATE_DATA
// DATA16  .tpat
// uint32  .w1
  // ---
// uint32  .w2
  // ---
// uint32  .w3
  // ---
// uint32  .pattern
  // ---
// uint32  .nothing
  // ---
// uint32  .u32
  // ---
// DATA16 .tpat
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPAT_CRATE_DATA
  // DATA16 .tpat
// .TPAT_CRATE_DATA/1/.tpat// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPAT_CRATE_DATA
// .TPAT_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPAT_CRATE_DATA
// .TPAT_CRATE_DATA
// Corr struct for: VME_CAEN_V1190_N
// DATA8  .geo
  // ---
// TDC_HEADER  .tdc_header
// TDC_DATA_V1190  .measurement
  // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
    // ---
  // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
    // ---
// TDC_ERROR  .tdc_error
// TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_N
// .VME_CAEN_V1190_N// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_N
// .VME_CAEN_V1190_N// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1190_N
// .VME_CAEN_V1190_N
// Corr struct for: TPC_CRATE_DATA
// BARRIER  .barrier0
// VME_CAEN_V7X5  .v785
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// VME_CAEN_V7X5  .v775
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// BARRIER  .barrier[3]
// VME_CAEN_V1190_N  .v1190
  // DATA8  .geo
    // ---
  // TDC_HEADER  .tdc_header
  // TDC_DATA_V1190  .measurement
    // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
      // ---
    // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
      // ---
  // TDC_ERROR  .tdc_error
  // TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPC_CRATE_DATA
// .TPC_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPC_CRATE_DATA
// .TPC_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TPC_CRATE_DATA
// .TPC_CRATE_DATA
// Corr struct for: TRIG3EVENT
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIG3EVENT
// .TRIG3EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIG3EVENT
// .TRIG3EVENT// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: TRIG3EVENT
// .TRIG3EVENT
// Corr struct for: USER_CRATE_DATA
// BARRIER  .barrier1
// VME_CAEN_V7X5  .v775[2]
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// VME_CAEN_V7X5  .v785[2]
  // raw_array_zero_suppress  .data(DATA24)[32]
    // ---
// BARRIER  .barrier0
// VME_CAEN_V830  .v830
  // raw_array_zero_suppress  .data(DATA32)[32]
    // ---
  // uint32  .event_number
    // ---
  // uint32  .ts
    // ---
  // uint32  .count
    // ---
  // uint32  .undefined
    // ---
  // uint32  .unnamed_26_26
    // ---
  // uint32  .geom
    // ---
  // uint32  .u32
    // ---
// ZERO_FILLER  .filler0
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: USER_CRATE_DATA
// .USER_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: USER_CRATE_DATA
// .USER_CRATE_DATA// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: USER_CRATE_DATA
// .USER_CRATE_DATA
// Corr struct for: VME_CAEN_V1751
// DATA8  .board_id
  // ---
// DATA8  .channels
  // ---
// DATA32  .board_time
  // ---
// raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
  // ---
// raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
// raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
// raw_list_ii_zero_suppress  .qshort(DATA16)[64]
// raw_list_ii_zero_suppress  .qlong(DATA16)[64]
// DATA16 .chan_ext_time[64]
// DATA12 .chan_fine_time[64]
// DATA16 .qshort[64]
// DATA16 .qlong[64]
// 
// size= 1  chunks=256  mem= 256  line=512  total=131072
// size=64  chunks=  4  mem= 256  line=260  total=66560
// size=256  chunks=  1  mem= 256  line=257  total=65792
// 
// corr structure: VME_CAEN_V1751
  // DATA16 .chan_ext_time[64]
  // DATA12 .chan_fine_time[64]
  // DATA16 .qshort[64]
  // DATA16 .qlong[64]
// .VME_CAEN_V1751/256/.chan_ext_time/64/[64]
                    // .chan_fine_time/64/[64]
                    // .qshort/64/[64]
                    // .qlong/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1751
// .VME_CAEN_V1751// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: VME_CAEN_V1751
// .VME_CAEN_V1751
// Corr struct for: WR_MULTI
// DATA32  .time_hi
  // ---
// DATA32  .time_lo
  // ---
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: WR_MULTI
// .WR_MULTI
// Corr struct for: aida_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// EXT_AIDA  .data
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: aida_subev
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .aida_subev/5/.ts/5/.subsystem_id
                    // .t1
                    // .t2
                    // .t3
                    // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: aida_subev
// .aida_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: aida_subev
// .aida_subev
// Corr struct for: bgo_tamex_subevent
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT_EXTENDED  .ts
  // DATA16  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// uint32  .b
  // ---
// uint32  .u32
  // ---
// TAMEX4_HEADER  .trigger_window
  // DATA16  .post_trig_ns
  // DATA16  .pre_trig_ns
// TAMEX4_PADDING  .padding
// TAMEX4_SFP  .tamex[3]
  // DATA16  .trig
  // DATA32  .event_size
    // ---
  // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
    // ---
  // TAMEX4_EPOCH_DATA  .epoch
  // TAMEX4_TIME_DATA  .time
// DATA16 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// DATA16 .trigger_window.post_trig_ns
// DATA16 .trigger_window.pre_trig_ns
// DATA16 .tamex[3].trig
// DATA12 .tamex[3].time_coarse[1024]
// DATA12 .tamex[3].time_fine[1024]
// DATA12 .tamex[3].time_edge[1024]
// DATA12 .tamex[3].time_channel[1024]
// 
// size= 1  chunks=12298  mem=12298  line=24596  total=302481608
// size= 2  chunks=12297  mem=24594  line=36891  total=453685518
// size= 5  chunks=12293  mem=61465  line=73758  total=907075884
// size=1024  chunks= 17  mem=17408  line=17425  total=214292650
// size=4097  chunks=  5  mem=20485  line=20490  total=251986020
// size=12291  chunks=  3  mem=36873  line=36876  total=453501048
// size=12298  chunks=  1  mem=12298  line=12299  total=151253102
// 
// corr structure: bgo_tamex_subevent
  // DATA16 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
  // DATA16 .trigger_window.post_trig_ns
  // DATA16 .trigger_window.pre_trig_ns
  // DATA16 .tamex[3].trig
  // DATA12 .tamex[3].time_coarse[1024]
  // DATA12 .tamex[3].time_fine[1024]
  // DATA12 .tamex[3].time_edge[1024]
  // DATA12 .tamex[3].time_channel[1024]
// .bgo_tamex_subevent/12298/.ts/5/.subsystem_id
                                // .t1
                                // .t2
                                // .t3
                                // .t4
                          // .trigger_window/2/.post_trig_ns
                                            // .pre_trig_ns
                          // .tamex/12291/[3]/4097/.trig
                                                // .time_coarse/1024/[1024]
                                                // .time_fine/1024/[1024]
                                                // .time_edge/1024/[1024]
                                                // .time_channel/1024/[1024]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: bgo_tamex_subevent
// .bgo_tamex_subevent// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: bgo_tamex_subevent
// .bgo_tamex_subevent
// Corr struct for: bm_subev
//  : public unpack_subevent_base
// ---
// raw_list_ii_zero_suppress  .dataS2(DATA32)[100000]
  // ---
// raw_list_ii_zero_suppress  .dataS4(DATA32)[100000]
  // ---
// TIMESTAMP_WHITERABBIT_EXTENDED  .ts
  // DATA16  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// DATA16 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// 
// size= 1  chunks=  5  mem=   5  line=10  total=50
// size= 5  chunks=  1  mem=   5  line=6  total=30
// 
// corr structure: bm_subev
  // DATA16 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
// .bm_subev/5/.ts/5/.subsystem_id
                  // .t1
                  // .t2
                  // .t3
                  // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: bm_subev
// .bm_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: bm_subev
// .bm_subev
// Corr struct for: bplast_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// TAMEX4_HEADER  .trigger_window
  // DATA16  .post_trig_ns
  // DATA16  .pre_trig_ns
// TAMEX4_PADDING  .padding
// TAMEX4_SFP  .tamex[9]
  // DATA16  .trig
  // DATA32  .event_size
    // ---
  // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
    // ---
  // TAMEX4_EPOCH_DATA  .epoch
  // TAMEX4_TIME_DATA  .time
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// DATA16 .trigger_window.post_trig_ns
// DATA16 .trigger_window.pre_trig_ns
// DATA16 .tamex[9].trig
// DATA12 .tamex[9].time_coarse[1024]
// DATA12 .tamex[9].time_fine[1024]
// DATA12 .tamex[9].time_edge[1024]
// DATA12 .tamex[9].time_channel[1024]
// 
// size= 1  chunks=36880  mem=36880  line=73760  total=-1574698496
// size= 2  chunks=36879  mem=73758  line=110637  total=-214674736
// size= 5  chunks=36875  mem=184375  line=221250  total=-430234592
// size=1024  chunks= 47  mem=48128  line=48175  total=1776694000
// size=4097  chunks= 11  mem=45067  line=45078  total=1662476640
// size=36873  chunks=  3  mem=110619  line=110622  total=-215227936
// size=36880  chunks=  1  mem=36880  line=36881  total=1360171280
// 
// corr structure: bplast_subev
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
  // DATA16 .trigger_window.post_trig_ns
  // DATA16 .trigger_window.pre_trig_ns
  // DATA16 .tamex[9].trig
  // DATA12 .tamex[9].time_coarse[1024]
  // DATA12 .tamex[9].time_fine[1024]
  // DATA12 .tamex[9].time_edge[1024]
  // DATA12 .tamex[9].time_channel[1024]
// .bplast_subev/36880/.ts/5/.subsystem_id
                          // .t1
                          // .t2
                          // .t3
                          // .t4
                    // .trigger_window/2/.post_trig_ns
                                      // .pre_trig_ns
                    // .tamex/36873/[9]/4097/.trig
                                          // .time_coarse/1024/[1024]
                                          // .time_fine/1024/[1024]
                                          // .time_edge/1024/[1024]
                                          // .time_channel/1024/[1024]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: bplast_subev
// .bplast_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: bplast_subev
// .bplast_subev
// Corr struct for: fatima_tamex_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT_EXTENDED  .ts
  // DATA16  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// TAMEX4_HEADER  .trigger_window
  // DATA16  .post_trig_ns
  // DATA16  .pre_trig_ns
// TAMEX4_PADDING  .padding
// TAMEX4_SFP  .tamex[4]
  // DATA16  .trig
  // DATA32  .event_size
    // ---
  // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
  // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
    // ---
  // TAMEX4_EPOCH_DATA  .epoch
  // TAMEX4_TIME_DATA  .time
// DATA16 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// DATA16 .trigger_window.post_trig_ns
// DATA16 .trigger_window.pre_trig_ns
// DATA16 .tamex[4].trig
// DATA12 .tamex[4].time_coarse[1024]
// DATA12 .tamex[4].time_fine[1024]
// DATA12 .tamex[4].time_edge[1024]
// DATA12 .tamex[4].time_channel[1024]
// 
// size= 1  chunks=16395  mem=16395  line=32790  total=537592050
// size= 2  chunks=16394  mem=32788  line=49182  total=806338890
// size= 5  chunks=16390  mem=81950  line=98340  total=1612284300
// size=1024  chunks= 22  mem=22528  line=22550  total=369707250
// size=4097  chunks=  6  mem=24582  line=24588  total=403120260
// size=16388  chunks=  3  mem=49164  line=49167  total=806092965
// size=16395  chunks=  1  mem=16395  line=16396  total=268812420
// 
// corr structure: fatima_tamex_subev
  // DATA16 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
  // DATA16 .trigger_window.post_trig_ns
  // DATA16 .trigger_window.pre_trig_ns
  // DATA16 .tamex[4].trig
  // DATA12 .tamex[4].time_coarse[1024]
  // DATA12 .tamex[4].time_fine[1024]
  // DATA12 .tamex[4].time_edge[1024]
  // DATA12 .tamex[4].time_channel[1024]
// .fatima_tamex_subev/16395/.ts/5/.subsystem_id
                                // .t1
                                // .t2
                                // .t3
                                // .t4
                          // .trigger_window/2/.post_trig_ns
                                            // .pre_trig_ns
                          // .tamex/16388/[4]/4097/.trig
                                                // .time_coarse/1024/[1024]
                                                // .time_fine/1024/[1024]
                                                // .time_edge/1024/[1024]
                                                // .time_channel/1024/[1024]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fatima_tamex_subev
// .fatima_tamex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fatima_tamex_subev
// .fatima_tamex_subev
// Corr struct for: fatima_vme_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT_EXTENDED  .ts
  // DATA16  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// ERR_WORD_SIX  .error1
// FATIMA_VME_SCALERS  .scalers
  // raw_array_zero_suppress  .data(DATA32)[32]
    // ---
// VME_CAEN_V1751  .qdc1
  // DATA8  .board_id
    // ---
  // DATA8  .channels
    // ---
  // DATA32  .board_time
    // ---
  // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
    // ---
  // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
  // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
  // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
  // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
// VME_CAEN_V1751  .qdc2
  // DATA8  .board_id
    // ---
  // DATA8  .channels
    // ---
  // DATA32  .board_time
    // ---
  // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
    // ---
  // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
  // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
  // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
  // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
// VME_CAEN_V1751  .qdc3
  // DATA8  .board_id
    // ---
  // DATA8  .channels
    // ---
  // DATA32  .board_time
    // ---
  // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
    // ---
  // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
  // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
  // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
  // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
// VME_CAEN_V1751  .qdc4
  // DATA8  .board_id
    // ---
  // DATA8  .channels
    // ---
  // DATA32  .board_time
    // ---
  // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
    // ---
  // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
  // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
  // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
  // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
// VME_CAEN_V1751  .qdc5
  // DATA8  .board_id
    // ---
  // DATA8  .channels
    // ---
  // DATA32  .board_time
    // ---
  // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
    // ---
  // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
  // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
  // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
  // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
// ERR_WORD_SIX  .error2
// VME_CAEN_V1290_N  .tdc1
  // DATA8  .geo
    // ---
  // TDC_HEADER  .tdc_header
  // TDC_DATA_V1290  .measurement
    // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
      // ---
    // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
      // ---
  // TDC_ERROR  .tdc_err
  // TDC_TRAILER  .tdc_trailer
// ERR_WORD_SIX  .error3
// VME_CAEN_V1290_N  .tdc2
  // DATA8  .geo
    // ---
  // TDC_HEADER  .tdc_header
  // TDC_DATA_V1290  .measurement
    // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
      // ---
    // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
      // ---
  // TDC_ERROR  .tdc_err
  // TDC_TRAILER  .tdc_trailer
// DATA16 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// DATA16 .qdc1.chan_ext_time[64]
// DATA12 .qdc1.chan_fine_time[64]
// DATA16 .qdc1.qshort[64]
// DATA16 .qdc1.qlong[64]
// DATA16 .qdc2.chan_ext_time[64]
// DATA12 .qdc2.chan_fine_time[64]
// DATA16 .qdc2.qshort[64]
// DATA16 .qdc2.qlong[64]
// DATA16 .qdc3.chan_ext_time[64]
// DATA12 .qdc3.chan_fine_time[64]
// DATA16 .qdc3.qshort[64]
// DATA16 .qdc3.qlong[64]
// DATA16 .qdc4.chan_ext_time[64]
// DATA12 .qdc4.chan_fine_time[64]
// DATA16 .qdc4.qshort[64]
// DATA16 .qdc4.qlong[64]
// DATA16 .qdc5.chan_ext_time[64]
// DATA12 .qdc5.chan_fine_time[64]
// DATA16 .qdc5.qshort[64]
// DATA16 .qdc5.qlong[64]
// 
// size= 1  chunks=1285  mem=1285  line=2570  total=3302450
// size= 5  chunks=1281  mem=6405  line=7686  total=9876510
// size=64  chunks= 21  mem=1344  line=1365  total=1754025
// size=256  chunks=  6  mem=1536  line=1542  total=1981470
// size=1285  chunks=  1  mem=1285  line=1286  total=1652510
// 
// corr structure: fatima_vme_subev
  // DATA16 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
  // DATA16 .qdc1.chan_ext_time[64]
  // DATA12 .qdc1.chan_fine_time[64]
  // DATA16 .qdc1.qshort[64]
  // DATA16 .qdc1.qlong[64]
  // DATA16 .qdc2.chan_ext_time[64]
  // DATA12 .qdc2.chan_fine_time[64]
  // DATA16 .qdc2.qshort[64]
  // DATA16 .qdc2.qlong[64]
  // DATA16 .qdc3.chan_ext_time[64]
  // DATA12 .qdc3.chan_fine_time[64]
  // DATA16 .qdc3.qshort[64]
  // DATA16 .qdc3.qlong[64]
  // DATA16 .qdc4.chan_ext_time[64]
  // DATA12 .qdc4.chan_fine_time[64]
  // DATA16 .qdc4.qshort[64]
  // DATA16 .qdc4.qlong[64]
  // DATA16 .qdc5.chan_ext_time[64]
  // DATA12 .qdc5.chan_fine_time[64]
  // DATA16 .qdc5.qshort[64]
  // DATA16 .qdc5.qlong[64]
// .fatima_vme_subev/1285/.ts/5/.subsystem_id
                             // .t1
                             // .t2
                             // .t3
                             // .t4
                       // .qdc1/256/.chan_ext_time/64/[64]
                                 // .chan_fine_time/64/[64]
                                 // .qshort/64/[64]
                                 // .qlong/64/[64]
                       // .qdc2/256/.chan_ext_time/64/[64]
                                 // .chan_fine_time/64/[64]
                                 // .qshort/64/[64]
                                 // .qlong/64/[64]
                       // .qdc3/256/.chan_ext_time/64/[64]
                                 // .chan_fine_time/64/[64]
                                 // .qshort/64/[64]
                                 // .qlong/64/[64]
                       // .qdc4/256/.chan_ext_time/64/[64]
                                 // .chan_fine_time/64/[64]
                                 // .qshort/64/[64]
                                 // .qlong/64/[64]
                       // .qdc5/256/.chan_ext_time/64/[64]
                                 // .chan_fine_time/64/[64]
                                 // .qshort/64/[64]
                                 // .qlong/64/[64]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fatima_vme_subev
// .fatima_vme_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: fatima_vme_subev
// .fatima_vme_subev
// Corr struct for: febex_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .ts
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// FEBEX_PADDING  .padding
// FEBEX_EVENT  .data[4]
  // DATA8  .trig
    // ---
  // DATA32  .event_trigger_time_hi
    // ---
  // DATA32  .event_trigger_time_lo
    // ---
  // DATA16  .hit_pattern
  // raw_array_zero_suppress  .channel_trigger_time_hi(DATA16)[16]
  // raw_array_zero_suppress  .channel_trigger_time_lo(DATA32)[16]
    // ---
  // raw_array_zero_suppress  .pileup(DATA8)[16]
    // ---
  // raw_array_zero_suppress  .overflow(DATA8)[16]
    // ---
  // raw_array_zero_suppress  .channel_cfd(DATA8)[16]
    // ---
  // raw_array_zero_suppress  .channel_energy(DATA32)[16]
    // ---
// DATA12 .ts.subsystem_id
// DATA16 .ts.t1
// DATA16 .ts.t2
// DATA16 .ts.t3
// DATA16 .ts.t4
// DATA16 .data[4].hit_pattern
// DATA16 .data[4].channel_trigger_time_hi[16]
// 
// size= 1  chunks= 73  mem=  73  line=146  total=10658
// size= 5  chunks= 69  mem= 345  line=414  total=30222
// size=16  chunks=  9  mem= 144  line=153  total=11169
// size=17  chunks=  5  mem=  85  line=90  total=6570
// size=68  chunks=  2  mem= 136  line=138  total=10074
// size=73  chunks=  1  mem=  73  line=74  total=5402
// 
// corr structure: febex_subev
  // DATA12 .ts.subsystem_id
  // DATA16 .ts.t1
  // DATA16 .ts.t2
  // DATA16 .ts.t3
  // DATA16 .ts.t4
  // DATA16 .data[4].hit_pattern
  // DATA16 .data[4].channel_trigger_time_hi[16]
// .febex_subev/73/.ts/5/.subsystem_id
                      // .t1
                      // .t2
                      // .t3
                      // .t4
                // .data/68/[4]/17/.hit_pattern
                                // .channel_trigger_time_hi/16/[16]// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: febex_subev
// .febex_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: febex_subev
// .febex_subev
// Corr struct for: frs_main_subev
//  : public unpack_subevent_base
// ---
// TRIG3EVENT  .trig3
// SPILL_ON  .spill_on
  // DATA8  .spillon
    // ---
// SPILL_OFF  .spill_off
  // DATA8  .spilloff
    // ---
// MAIN_CRATE_DATA  .data
  // BARRIER  .barrier0
  // VME_CAEN_V830  .v830
    // raw_array_zero_suppress  .data(DATA32)[32]
      // ---
    // uint32  .event_number
      // ---
    // uint32  .ts
      // ---
    // uint32  .count
      // ---
    // uint32  .undefined
      // ---
    // uint32  .unnamed_26_26
      // ---
    // uint32  .geom
      // ---
    // uint32  .u32
      // ---
  // ZERO_FILLER  .filler0
  // BARRIER  .barrier1
  // VME_CAEN_V7X5  .v792
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // BARRIER  .barrier2
  // VME_CAEN_V1290_N  .v1290
    // DATA8  .geo
      // ---
    // TDC_HEADER  .tdc_header
    // TDC_DATA_V1290  .measurement
      // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
        // ---
      // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
        // ---
    // TDC_ERROR  .tdc_err
    // TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_main_subev
// .frs_main_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_main_subev
// .frs_main_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_main_subev
// .frs_main_subev
// Corr struct for: frs_tpat_subev
//  : public unpack_subevent_base
// ---
// TIMESTAMP_WHITERABBIT  .wr
  // DATA12  .subsystem_id
  // DATA16  .t1
  // DATA16  .t2
  // DATA16  .t3
  // DATA16  .t4
// TRIG3EVENT  .trig3
// TPAT_CRATE_DATA  .data
  // DATA16  .tpat
  // uint32  .w1
    // ---
  // uint32  .w2
    // ---
  // uint32  .w3
    // ---
  // uint32  .pattern
    // ---
  // uint32  .nothing
    // ---
  // uint32  .u32
    // ---
// DATA12 .wr.subsystem_id
// DATA16 .wr.t1
// DATA16 .wr.t2
// DATA16 .wr.t3
// DATA16 .wr.t4
// DATA16 .data.tpat
// 
// size= 1  chunks=  6  mem=   6  line=12  total=72
// size= 5  chunks=  2  mem=  10  line=12  total=72
// size= 6  chunks=  1  mem=   6  line=7  total=42
// 
// corr structure: frs_tpat_subev
  // DATA12 .wr.subsystem_id
  // DATA16 .wr.t1
  // DATA16 .wr.t2
  // DATA16 .wr.t3
  // DATA16 .wr.t4
  // DATA16 .data.tpat
// .frs_tpat_subev/6/.wr/5/.subsystem_id
                        // .t1
                        // .t2
                        // .t3
                        // .t4
                  // .data/1/.tpat// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_tpat_subev
// .frs_tpat_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_tpat_subev
// .frs_tpat_subev
// Corr struct for: frs_tpc_subev
//  : public unpack_subevent_base
// ---
// uint32  .b
  // ---
// uint32  .u32
  // ---
// TRIG3EVENT  .trig3
// SPILL_ON  .spill_on
  // DATA8  .spillon
    // ---
// SPILL_OFF  .spill_off
  // DATA8  .spilloff
    // ---
// TPC_CRATE_DATA  .data
  // BARRIER  .barrier0
  // VME_CAEN_V7X5  .v785
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // VME_CAEN_V7X5  .v775
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // BARRIER  .barrier[3]
  // VME_CAEN_V1190_N  .v1190
    // DATA8  .geo
      // ---
    // TDC_HEADER  .tdc_header
    // TDC_DATA_V1190  .measurement
      // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
        // ---
      // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
        // ---
    // TDC_ERROR  .tdc_error
    // TDC_TRAILER  .tdc_trailer
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_tpc_subev
// .frs_tpc_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_tpc_subev
// .frs_tpc_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_tpc_subev
// .frs_tpc_subev
// Corr struct for: frs_user_subev
//  : public unpack_subevent_base
// ---
// TRIG3EVENT  .trig3
// SPILL_ON  .spill_on
  // DATA8  .spillon
    // ---
// SPILL_OFF  .spill_off
  // DATA8  .spilloff
    // ---
// USER_CRATE_DATA  .data
  // BARRIER  .barrier1
  // VME_CAEN_V7X5  .v775[2]
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // VME_CAEN_V7X5  .v785[2]
    // raw_array_zero_suppress  .data(DATA24)[32]
      // ---
  // BARRIER  .barrier0
  // VME_CAEN_V830  .v830
    // raw_array_zero_suppress  .data(DATA32)[32]
      // ---
    // uint32  .event_number
      // ---
    // uint32  .ts
      // ---
    // uint32  .count
      // ---
    // uint32  .undefined
      // ---
    // uint32  .unnamed_26_26
      // ---
    // uint32  .geom
      // ---
    // uint32  .u32
      // ---
  // ZERO_FILLER  .filler0
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_user_subev
// .frs_user_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_user_subev
// .frs_user_subev// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: frs_user_subev
// .frs_user_subev
// Corr struct for: unpack_event
//  : public unpack_event_base
// ---
// aida_subev  .aida
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // EXT_AIDA  .data
// febex_subev  .germanium
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // FEBEX_PADDING  .padding
  // FEBEX_EVENT  .data[4]
    // DATA8  .trig
      // ---
    // DATA32  .event_trigger_time_hi
      // ---
    // DATA32  .event_trigger_time_lo
      // ---
    // DATA16  .hit_pattern
    // raw_array_zero_suppress  .channel_trigger_time_hi(DATA16)[16]
    // raw_array_zero_suppress  .channel_trigger_time_lo(DATA32)[16]
      // ---
    // raw_array_zero_suppress  .pileup(DATA8)[16]
      // ---
    // raw_array_zero_suppress  .overflow(DATA8)[16]
      // ---
    // raw_array_zero_suppress  .channel_cfd(DATA8)[16]
      // ---
    // raw_array_zero_suppress  .channel_energy(DATA32)[16]
      // ---
// fatima_tamex_subev  .fatima
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT_EXTENDED  .ts
    // DATA16  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // TAMEX4_HEADER  .trigger_window
    // DATA16  .post_trig_ns
    // DATA16  .pre_trig_ns
  // TAMEX4_PADDING  .padding
  // TAMEX4_SFP  .tamex[4]
    // DATA16  .trig
    // DATA32  .event_size
      // ---
    // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
      // ---
    // TAMEX4_EPOCH_DATA  .epoch
    // TAMEX4_TIME_DATA  .time
// fatima_vme_subev  .fatimavme
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT_EXTENDED  .ts
    // DATA16  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // ERR_WORD_SIX  .error1
  // FATIMA_VME_SCALERS  .scalers
    // raw_array_zero_suppress  .data(DATA32)[32]
      // ---
  // VME_CAEN_V1751  .qdc1
    // DATA8  .board_id
      // ---
    // DATA8  .channels
      // ---
    // DATA32  .board_time
      // ---
    // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
      // ---
    // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
    // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
    // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
    // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
  // VME_CAEN_V1751  .qdc2
    // DATA8  .board_id
      // ---
    // DATA8  .channels
      // ---
    // DATA32  .board_time
      // ---
    // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
      // ---
    // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
    // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
    // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
    // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
  // VME_CAEN_V1751  .qdc3
    // DATA8  .board_id
      // ---
    // DATA8  .channels
      // ---
    // DATA32  .board_time
      // ---
    // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
      // ---
    // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
    // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
    // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
    // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
  // VME_CAEN_V1751  .qdc4
    // DATA8  .board_id
      // ---
    // DATA8  .channels
      // ---
    // DATA32  .board_time
      // ---
    // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
      // ---
    // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
    // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
    // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
    // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
  // VME_CAEN_V1751  .qdc5
    // DATA8  .board_id
      // ---
    // DATA8  .channels
      // ---
    // DATA32  .board_time
      // ---
    // raw_list_ii_zero_suppress  .channel_time(DATA32)[64]
      // ---
    // raw_list_ii_zero_suppress  .chan_ext_time(DATA16)[64]
    // raw_list_ii_zero_suppress  .chan_fine_time(DATA12)[64]
    // raw_list_ii_zero_suppress  .qshort(DATA16)[64]
    // raw_list_ii_zero_suppress  .qlong(DATA16)[64]
  // ERR_WORD_SIX  .error2
  // VME_CAEN_V1290_N  .tdc1
    // DATA8  .geo
      // ---
    // TDC_HEADER  .tdc_header
    // TDC_DATA_V1290  .measurement
      // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
        // ---
      // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
        // ---
    // TDC_ERROR  .tdc_err
    // TDC_TRAILER  .tdc_trailer
  // ERR_WORD_SIX  .error3
  // VME_CAEN_V1290_N  .tdc2
    // DATA8  .geo
      // ---
    // TDC_HEADER  .tdc_header
    // TDC_DATA_V1290  .measurement
      // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
        // ---
      // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
        // ---
    // TDC_ERROR  .tdc_err
    // TDC_TRAILER  .tdc_trailer
// bplast_subev  .bplast
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .ts
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // TAMEX4_HEADER  .trigger_window
    // DATA16  .post_trig_ns
    // DATA16  .pre_trig_ns
  // TAMEX4_PADDING  .padding
  // TAMEX4_SFP  .tamex[9]
    // DATA16  .trig
    // DATA32  .event_size
      // ---
    // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
      // ---
    // TAMEX4_EPOCH_DATA  .epoch
    // TAMEX4_TIME_DATA  .time
// bgo_tamex_subevent  .bgo
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT_EXTENDED  .ts
    // DATA16  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // uint32  .b
    // ---
  // uint32  .u32
    // ---
  // TAMEX4_HEADER  .trigger_window
    // DATA16  .post_trig_ns
    // DATA16  .pre_trig_ns
  // TAMEX4_PADDING  .padding
  // TAMEX4_SFP  .tamex[3]
    // DATA16  .trig
    // DATA32  .event_size
      // ---
    // raw_list_ii_zero_suppress  .time_coarse(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_fine(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_edge(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_channel(DATA12)[1024]
    // raw_list_ii_zero_suppress  .time_epoch(DATA32)[1024]
      // ---
    // TAMEX4_EPOCH_DATA  .epoch
    // TAMEX4_TIME_DATA  .time
// frs_main_subev  .frsmain
  //  : public unpack_subevent_base
  // ---
  // TRIG3EVENT  .trig3
  // SPILL_ON  .spill_on
    // DATA8  .spillon
      // ---
  // SPILL_OFF  .spill_off
    // DATA8  .spilloff
      // ---
  // MAIN_CRATE_DATA  .data
    // BARRIER  .barrier0
    // VME_CAEN_V830  .v830
      // raw_array_zero_suppress  .data(DATA32)[32]
        // ---
      // uint32  .event_number
        // ---
      // uint32  .ts
        // ---
      // uint32  .count
        // ---
      // uint32  .undefined
        // ---
      // uint32  .unnamed_26_26
        // ---
      // uint32  .geom
        // ---
      // uint32  .u32
        // ---
    // ZERO_FILLER  .filler0
    // BARRIER  .barrier1
    // VME_CAEN_V7X5  .v792
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
    // BARRIER  .barrier2
    // VME_CAEN_V1290_N  .v1290
      // DATA8  .geo
        // ---
      // TDC_HEADER  .tdc_header
      // TDC_DATA_V1290  .measurement
        // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
          // ---
        // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
          // ---
      // TDC_ERROR  .tdc_err
      // TDC_TRAILER  .tdc_trailer
// frs_tpc_subev  .frstpc
  //  : public unpack_subevent_base
  // ---
  // uint32  .b
    // ---
  // uint32  .u32
    // ---
  // TRIG3EVENT  .trig3
  // SPILL_ON  .spill_on
    // DATA8  .spillon
      // ---
  // SPILL_OFF  .spill_off
    // DATA8  .spilloff
      // ---
  // TPC_CRATE_DATA  .data
    // BARRIER  .barrier0
    // VME_CAEN_V7X5  .v785
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
    // VME_CAEN_V7X5  .v775
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
    // BARRIER  .barrier[3]
    // VME_CAEN_V1190_N  .v1190
      // DATA8  .geo
        // ---
      // TDC_HEADER  .tdc_header
      // TDC_DATA_V1190  .measurement
        // raw_array_multi_zero_suppress  .data(DATA24)[128][128]
          // ---
        // raw_array_multi_zero_suppress  .leadOrTrail(DATA8)[128][128]
          // ---
      // TDC_ERROR  .tdc_error
      // TDC_TRAILER  .tdc_trailer
// frs_user_subev  .frsuser
  //  : public unpack_subevent_base
  // ---
  // TRIG3EVENT  .trig3
  // SPILL_ON  .spill_on
    // DATA8  .spillon
      // ---
  // SPILL_OFF  .spill_off
    // DATA8  .spilloff
      // ---
  // USER_CRATE_DATA  .data
    // BARRIER  .barrier1
    // VME_CAEN_V7X5  .v775[2]
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
    // VME_CAEN_V7X5  .v785[2]
      // raw_array_zero_suppress  .data(DATA24)[32]
        // ---
    // BARRIER  .barrier0
    // VME_CAEN_V830  .v830
      // raw_array_zero_suppress  .data(DATA32)[32]
        // ---
      // uint32  .event_number
        // ---
      // uint32  .ts
        // ---
      // uint32  .count
        // ---
      // uint32  .undefined
        // ---
      // uint32  .unnamed_26_26
        // ---
      // uint32  .geom
        // ---
      // uint32  .u32
        // ---
    // ZERO_FILLER  .filler0
// frs_tpat_subev  .frstpat
  //  : public unpack_subevent_base
  // ---
  // TIMESTAMP_WHITERABBIT  .wr
    // DATA12  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
  // TRIG3EVENT  .trig3
  // TPAT_CRATE_DATA  .data
    // DATA16  .tpat
    // uint32  .w1
      // ---
    // uint32  .w2
      // ---
    // uint32  .w3
      // ---
    // uint32  .pattern
      // ---
    // uint32  .nothing
      // ---
    // uint32  .u32
      // ---
// bm_subev  .beammonitor
  //  : public unpack_subevent_base
  // ---
  // raw_list_ii_zero_suppress  .dataS2(DATA32)[100000]
    // ---
  // raw_list_ii_zero_suppress  .dataS4(DATA32)[100000]
    // ---
  // TIMESTAMP_WHITERABBIT_EXTENDED  .ts
    // DATA16  .subsystem_id
    // DATA16  .t1
    // DATA16  .t2
    // DATA16  .t3
    // DATA16  .t4
// DATA12 .aida.ts.subsystem_id
// DATA16 .aida.ts.t1
// DATA16 .aida.ts.t2
// DATA16 .aida.ts.t3
// DATA16 .aida.ts.t4
// DATA12 .germanium.ts.subsystem_id
// DATA16 .germanium.ts.t1
// DATA16 .germanium.ts.t2
// DATA16 .germanium.ts.t3
// DATA16 .germanium.ts.t4
// DATA16 .germanium.data[4].hit_pattern
// DATA16 .germanium.data[4].channel_trigger_time_hi[16]
// DATA16 .fatima.ts.subsystem_id
// DATA16 .fatima.ts.t1
// DATA16 .fatima.ts.t2
// DATA16 .fatima.ts.t3
// DATA16 .fatima.ts.t4
// DATA16 .fatima.trigger_window.post_trig_ns
// DATA16 .fatima.trigger_window.pre_trig_ns
// DATA16 .fatima.tamex[4].trig
// DATA12 .fatima.tamex[4].time_coarse[1024]
// DATA12 .fatima.tamex[4].time_fine[1024]
// DATA12 .fatima.tamex[4].time_edge[1024]
// DATA12 .fatima.tamex[4].time_channel[1024]
// DATA16 .fatimavme.ts.subsystem_id
// DATA16 .fatimavme.ts.t1
// DATA16 .fatimavme.ts.t2
// DATA16 .fatimavme.ts.t3
// DATA16 .fatimavme.ts.t4
// DATA16 .fatimavme.qdc1.chan_ext_time[64]
// DATA12 .fatimavme.qdc1.chan_fine_time[64]
// DATA16 .fatimavme.qdc1.qshort[64]
// DATA16 .fatimavme.qdc1.qlong[64]
// DATA16 .fatimavme.qdc2.chan_ext_time[64]
// DATA12 .fatimavme.qdc2.chan_fine_time[64]
// DATA16 .fatimavme.qdc2.qshort[64]
// DATA16 .fatimavme.qdc2.qlong[64]
// DATA16 .fatimavme.qdc3.chan_ext_time[64]
// DATA12 .fatimavme.qdc3.chan_fine_time[64]
// DATA16 .fatimavme.qdc3.qshort[64]
// DATA16 .fatimavme.qdc3.qlong[64]
// DATA16 .fatimavme.qdc4.chan_ext_time[64]
// DATA12 .fatimavme.qdc4.chan_fine_time[64]
// DATA16 .fatimavme.qdc4.qshort[64]
// DATA16 .fatimavme.qdc4.qlong[64]
// DATA16 .fatimavme.qdc5.chan_ext_time[64]
// DATA12 .fatimavme.qdc5.chan_fine_time[64]
// DATA16 .fatimavme.qdc5.qshort[64]
// DATA16 .fatimavme.qdc5.qlong[64]
// DATA12 .bplast.ts.subsystem_id
// DATA16 .bplast.ts.t1
// DATA16 .bplast.ts.t2
// DATA16 .bplast.ts.t3
// DATA16 .bplast.ts.t4
// DATA16 .bplast.trigger_window.post_trig_ns
// DATA16 .bplast.trigger_window.pre_trig_ns
// DATA16 .bplast.tamex[9].trig
// DATA12 .bplast.tamex[9].time_coarse[1024]
// DATA12 .bplast.tamex[9].time_fine[1024]
// DATA12 .bplast.tamex[9].time_edge[1024]
// DATA12 .bplast.tamex[9].time_channel[1024]
// DATA16 .bgo.ts.subsystem_id
// DATA16 .bgo.ts.t1
// DATA16 .bgo.ts.t2
// DATA16 .bgo.ts.t3
// DATA16 .bgo.ts.t4
// DATA16 .bgo.trigger_window.post_trig_ns
// DATA16 .bgo.trigger_window.pre_trig_ns
// DATA16 .bgo.tamex[3].trig
// DATA12 .bgo.tamex[3].time_coarse[1024]
// DATA12 .bgo.tamex[3].time_fine[1024]
// DATA12 .bgo.tamex[3].time_edge[1024]
// DATA12 .bgo.tamex[3].time_channel[1024]
// DATA12 .frstpat.wr.subsystem_id
// DATA16 .frstpat.wr.t1
// DATA16 .frstpat.wr.t2
// DATA16 .frstpat.wr.t3
// DATA16 .frstpat.wr.t4
// DATA16 .frstpat.data.tpat
// DATA16 .beammonitor.ts.subsystem_id
// DATA16 .beammonitor.ts.t1
// DATA16 .beammonitor.ts.t2
// DATA16 .beammonitor.ts.t3
// DATA16 .beammonitor.ts.t4
// 
// size= 1  chunks=66947  mem=66947  line=133894  total=373867026
// size= 2  chunks=66944  mem=133888  line=200832  total=560198016
// size= 5  chunks=66912  mem=334560  line=401472  total=1107542208
// size= 6  chunks=66911  mem=401466  line=468377  total=1291663947
// size=16  chunks=66851  mem=1069616  line=1136467  total=-1226355079
// size=17  chunks=66847  mem=1136399  line=1203246  total=-1050668662
// size=64  chunks=65587  mem=4197568  line=4263155  total=1937596249
// size=68  chunks=65584  mem=4459712  line=4525296  total=-1987686704
// size=73  chunks=65583  mem=4787559  line=4853142  total=-1514217022
// size=256  chunks=65568  mem=16785408  line=16850976  total=-1454108576
// size=1024  chunks= 96  mem=98304  line=98400  total=-2002349792
// size=1285  chunks= 91  mem=116935  line=117026  total=-755394970
// size=4097  chunks= 27  mem=110619  line=110646  total=-1182516830
// size=12291  chunks= 25  mem=307275  line=307300  total=-902023380
// size=12298  chunks= 23  mem=282854  line=282877  total=1757897335
// size=16388  chunks= 20  mem=327760  line=327780  total=469051180
// size=16395  chunks= 18  mem=295110  line=295128  total=-1716902264
// size=36873  chunks= 10  mem=368730  line=368740  total=-1083766996
// size=36880  chunks=  8  mem=295040  line=295048  total=-1722258024
// size=66947  chunks=  1  mem=66947  line=66948  total=187000460
// 
// corr structure: unpack_event
  // DATA12 .aida.ts.subsystem_id
  // DATA16 .aida.ts.t1
  // DATA16 .aida.ts.t2
  // DATA16 .aida.ts.t3
  // DATA16 .aida.ts.t4
  // DATA12 .germanium.ts.subsystem_id
  // DATA16 .germanium.ts.t1
  // DATA16 .germanium.ts.t2
  // DATA16 .germanium.ts.t3
  // DATA16 .germanium.ts.t4
  // DATA16 .germanium.data[4].hit_pattern
  // DATA16 .germanium.data[4].channel_trigger_time_hi[16]
  // DATA16 .fatima.ts.subsystem_id
  // DATA16 .fatima.ts.t1
  // DATA16 .fatima.ts.t2
  // DATA16 .fatima.ts.t3
  // DATA16 .fatima.ts.t4
  // DATA16 .fatima.trigger_window.post_trig_ns
  // DATA16 .fatima.trigger_window.pre_trig_ns
  // DATA16 .fatima.tamex[4].trig
  // DATA12 .fatima.tamex[4].time_coarse[1024]
  // DATA12 .fatima.tamex[4].time_fine[1024]
  // DATA12 .fatima.tamex[4].time_edge[1024]
  // DATA12 .fatima.tamex[4].time_channel[1024]
  // DATA16 .fatimavme.ts.subsystem_id
  // DATA16 .fatimavme.ts.t1
  // DATA16 .fatimavme.ts.t2
  // DATA16 .fatimavme.ts.t3
  // DATA16 .fatimavme.ts.t4
  // DATA16 .fatimavme.qdc1.chan_ext_time[64]
  // DATA12 .fatimavme.qdc1.chan_fine_time[64]
  // DATA16 .fatimavme.qdc1.qshort[64]
  // DATA16 .fatimavme.qdc1.qlong[64]
  // DATA16 .fatimavme.qdc2.chan_ext_time[64]
  // DATA12 .fatimavme.qdc2.chan_fine_time[64]
  // DATA16 .fatimavme.qdc2.qshort[64]
  // DATA16 .fatimavme.qdc2.qlong[64]
  // DATA16 .fatimavme.qdc3.chan_ext_time[64]
  // DATA12 .fatimavme.qdc3.chan_fine_time[64]
  // DATA16 .fatimavme.qdc3.qshort[64]
  // DATA16 .fatimavme.qdc3.qlong[64]
  // DATA16 .fatimavme.qdc4.chan_ext_time[64]
  // DATA12 .fatimavme.qdc4.chan_fine_time[64]
  // DATA16 .fatimavme.qdc4.qshort[64]
  // DATA16 .fatimavme.qdc4.qlong[64]
  // DATA16 .fatimavme.qdc5.chan_ext_time[64]
  // DATA12 .fatimavme.qdc5.chan_fine_time[64]
  // DATA16 .fatimavme.qdc5.qshort[64]
  // DATA16 .fatimavme.qdc5.qlong[64]
  // DATA12 .bplast.ts.subsystem_id
  // DATA16 .bplast.ts.t1
  // DATA16 .bplast.ts.t2
  // DATA16 .bplast.ts.t3
  // DATA16 .bplast.ts.t4
  // DATA16 .bplast.trigger_window.post_trig_ns
  // DATA16 .bplast.trigger_window.pre_trig_ns
  // DATA16 .bplast.tamex[9].trig
  // DATA12 .bplast.tamex[9].time_coarse[1024]
  // DATA12 .bplast.tamex[9].time_fine[1024]
  // DATA12 .bplast.tamex[9].time_edge[1024]
  // DATA12 .bplast.tamex[9].time_channel[1024]
  // DATA16 .bgo.ts.subsystem_id
  // DATA16 .bgo.ts.t1
  // DATA16 .bgo.ts.t2
  // DATA16 .bgo.ts.t3
  // DATA16 .bgo.ts.t4
  // DATA16 .bgo.trigger_window.post_trig_ns
  // DATA16 .bgo.trigger_window.pre_trig_ns
  // DATA16 .bgo.tamex[3].trig
  // DATA12 .bgo.tamex[3].time_coarse[1024]
  // DATA12 .bgo.tamex[3].time_fine[1024]
  // DATA12 .bgo.tamex[3].time_edge[1024]
  // DATA12 .bgo.tamex[3].time_channel[1024]
  // DATA12 .frstpat.wr.subsystem_id
  // DATA16 .frstpat.wr.t1
  // DATA16 .frstpat.wr.t2
  // DATA16 .frstpat.wr.t3
  // DATA16 .frstpat.wr.t4
  // DATA16 .frstpat.data.tpat
  // DATA16 .beammonitor.ts.subsystem_id
  // DATA16 .beammonitor.ts.t1
  // DATA16 .beammonitor.ts.t2
  // DATA16 .beammonitor.ts.t3
  // DATA16 .beammonitor.ts.t4
// .unpack_event/66947/.aida/5/.ts/5/.subsystem_id
                                  // .t1
                                  // .t2
                                  // .t3
                                  // .t4
                    // .germanium/73/.ts/5/.subsystem_id
                                        // .t1
                                        // .t2
                                        // .t3
                                        // .t4
                                  // .data/68/[4]/17/.hit_pattern
                                                  // .channel_trigger_time_hi/16/[16]
                    // .fatima/16395/.ts/5/.subsystem_id
                                        // .t1
                                        // .t2
                                        // .t3
                                        // .t4
                                  // .trigger_window/2/.post_trig_ns
                                                    // .pre_trig_ns
                                  // .tamex/16388/[4]/4097/.trig
                                                        // .time_coarse/1024/[1024]
                                                        // .time_fine/1024/[1024]
                                                        // .time_edge/1024/[1024]
                                                        // .time_channel/1024/[1024]
                    // .fatimavme/1285/.ts/5/.subsystem_id
                                          // .t1
                                          // .t2
                                          // .t3
                                          // .t4
                                    // .qdc1/256/.chan_ext_time/64/[64]
                                              // .chan_fine_time/64/[64]
                                              // .qshort/64/[64]
                                              // .qlong/64/[64]
                                    // .qdc2/256/.chan_ext_time/64/[64]
                                              // .chan_fine_time/64/[64]
                                              // .qshort/64/[64]
                                              // .qlong/64/[64]
                                    // .qdc3/256/.chan_ext_time/64/[64]
                                              // .chan_fine_time/64/[64]
                                              // .qshort/64/[64]
                                              // .qlong/64/[64]
                                    // .qdc4/256/.chan_ext_time/64/[64]
                                              // .chan_fine_time/64/[64]
                                              // .qshort/64/[64]
                                              // .qlong/64/[64]
                                    // .qdc5/256/.chan_ext_time/64/[64]
                                              // .chan_fine_time/64/[64]
                                              // .qshort/64/[64]
                                              // .qlong/64/[64]
                    // .bplast/36880/.ts/5/.subsystem_id
                                        // .t1
                                        // .t2
                                        // .t3
                                        // .t4
                                  // .trigger_window/2/.post_trig_ns
                                                    // .pre_trig_ns
                                  // .tamex/36873/[9]/4097/.trig
                                                        // .time_coarse/1024/[1024]
                                                        // .time_fine/1024/[1024]
                                                        // .time_edge/1024/[1024]
                                                        // .time_channel/1024/[1024]
                    // .bgo/12298/.ts/5/.subsystem_id
                                     // .t1
                                     // .t2
                                     // .t3
                                     // .t4
                               // .trigger_window/2/.post_trig_ns
                                                 // .pre_trig_ns
                               // .tamex/12291/[3]/4097/.trig
                                                     // .time_coarse/1024/[1024]
                                                     // .time_fine/1024/[1024]
                                                     // .time_edge/1024/[1024]
                                                     // .time_channel/1024/[1024]
                    // .frstpat/6/.wr/5/.subsystem_id
                                     // .t1
                                     // .t2
                                     // .t3
                                     // .t4
                               // .data/1/.tpat
                    // .beammonitor/5/.ts/5/.subsystem_id
                                         // .t1
                                         // .t2
                                         // .t3
                                         // .t4// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_event
// .unpack_event
// Corr struct for: unpack_sticky_event
//  : public unpack_sticky_event_base
// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event// 
// size= 1  chunks=  1  mem=   1  line=2  total=2
// 
// corr structure: unpack_sticky_event
// .unpack_sticky_event

/** END_CORR_STRUCT ***************************************************/

