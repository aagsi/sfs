/** BEGIN_FUNCTION_CALL_PER_MEMBER *************************************
 *
 * Recursive function calls per member.
 *
 * Do not edit - automatically generated.
 */

#include "gen/default_fcncall_define.hh"

#ifndef USER_DEF_raw_event_SPILL
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SPILL)::FCNCALL_NAME(raw_event_SPILL)
{
  FCNCALL_INIT;
  // DATA8 ON;
  {
  FCNCALL_SUBNAME("ON");
  { FCNCALL_CALL_CTRL_WRAP(ON,ON.FCNCALL_CALL(ON)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA8 OFF;
  {
  FCNCALL_SUBNAME("OFF");
  { FCNCALL_CALL_CTRL_WRAP(OFF,OFF.FCNCALL_CALL(OFF)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SPILL

#ifndef USER_DEF_raw_event_SCI_TAC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SCI_TAC)::FCNCALL_NAME(raw_event_SCI_TAC)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA24,DATA24,32> DE;
  {
  FCNCALL_SUBNAME("DE");
  { FCNCALL_CALL_CTRL_WRAP(DE,DE.FCNCALL_CALL(DE)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA24,DATA24,32> DT;
  {
  FCNCALL_SUBNAME("DT");
  { FCNCALL_CALL_CTRL_WRAP(DT,DT.FCNCALL_CALL(DT)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SCI_TAC

#ifndef USER_DEF_raw_event_SCI_MHTDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SCI_MHTDC)::FCNCALL_NAME(raw_event_SCI_MHTDC)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,32,128> T;
  {
  FCNCALL_SUBNAME("T");
  { FCNCALL_CALL_CTRL_WRAP(T,T.FCNCALL_CALL(T)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA8,DATA8,32,128> LOT;
  {
  FCNCALL_SUBNAME("LOT");
  { FCNCALL_CALL_CTRL_WRAP(LOT,LOT.FCNCALL_CALL(LOT)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SCI_MHTDC

#ifndef USER_DEF_raw_event_SCI
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_SCI)::FCNCALL_NAME(raw_event_SCI)
{
  FCNCALL_INIT;
  // raw_event_SCI_TAC TAC;
  {
  FCNCALL_SUBNAME("TAC");
  { FCNCALL_CALL_CTRL_WRAP(TAC,TAC.FCNCALL_CALL(TAC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SCI_MHTDC MHTDC;
  {
  FCNCALL_SUBNAME("MHTDC");
  { FCNCALL_CALL_CTRL_WRAP(MHTDC,MHTDC.FCNCALL_CALL(MHTDC)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_SCI

#ifndef USER_DEF_raw_event_TPC_TDC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TPC_TDC)::FCNCALL_NAME(raw_event_TPC_TDC)
{
  FCNCALL_INIT;
  // raw_array_multi_zero_suppress<DATA24,DATA24,128,128> T;
  {
  FCNCALL_SUBNAME("T");
  { FCNCALL_CALL_CTRL_WRAP(T,T.FCNCALL_CALL(T)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA8,DATA8,128,128> LOT;
  {
  FCNCALL_SUBNAME("LOT");
  { FCNCALL_CALL_CTRL_WRAP(LOT,LOT.FCNCALL_CALL(LOT)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TPC_TDC

#ifndef USER_DEF_raw_event_TPC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_TPC)::FCNCALL_NAME(raw_event_TPC)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA24,DATA24,32> ADC[7];
  {
  FCNCALL_SUBNAME("ADC");
  FCNCALL_FOR(__i0,7)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(ADC__i0,,__i0,ADC[__i0].FCNCALL_CALL(ADC[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TPC_TDC TDC;
  {
  FCNCALL_SUBNAME("TDC");
  { FCNCALL_CALL_CTRL_WRAP(TDC,TDC.FCNCALL_CALL(TDC)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_TPC

#ifndef USER_DEF_raw_event_MUSIC
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_MUSIC)::FCNCALL_NAME(raw_event_MUSIC)
{
  FCNCALL_INIT;
  // raw_array_zero_suppress<DATA24,DATA24,8> E;
  {
  FCNCALL_SUBNAME("E");
  { FCNCALL_CALL_CTRL_WRAP(E,E.FCNCALL_CALL(E)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA24,DATA24,8,128> T;
  {
  FCNCALL_SUBNAME("T");
  { FCNCALL_CALL_CTRL_WRAP(T,T.FCNCALL_CALL(T)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_multi_zero_suppress<DATA8,DATA8,8,128> LOT;
  {
  FCNCALL_SUBNAME("LOT");
  { FCNCALL_CALL_CTRL_WRAP(LOT,LOT.FCNCALL_CALL(LOT)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_MUSIC

#ifndef USER_DEF_raw_event_WR
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event_WR)::FCNCALL_NAME(raw_event_WR)
{
  FCNCALL_INIT;
  // DATA12 ID;
  {
  FCNCALL_SUBNAME("ID");
  { FCNCALL_CALL_CTRL_WRAP(ID,ID.FCNCALL_CALL(ID)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 T[4];
  {
  FCNCALL_SUBNAME("T");
  FCNCALL_FOR(__i0,4)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(T__i0,,__i0,T[__i0].FCNCALL_CALL(T[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event_WR

#ifndef USER_DEF_raw_event
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_event)::FCNCALL_NAME(raw_event)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(raw_event_base,FCNCALL_CLASS_NAME(raw_event_base)::FCNCALL_CALL_BASE());
  // raw_event_SPILL SPILL;
  {
  FCNCALL_SUBNAME("SPILL");
  { FCNCALL_CALL_CTRL_WRAP(SPILL,SPILL.FCNCALL_CALL(SPILL)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_array_zero_suppress<DATA32,DATA32,32> SCALERS[2];
  {
  FCNCALL_SUBNAME("SCALERS");
  FCNCALL_FOR(__i0,2)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(SCALERS__i0,,__i0,SCALERS[__i0].FCNCALL_CALL(SCALERS[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_SCI SCI;
  {
  FCNCALL_SUBNAME("SCI");
  { FCNCALL_CALL_CTRL_WRAP(SCI,SCI.FCNCALL_CALL(SCI)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_TPC TPC;
  {
  FCNCALL_SUBNAME("TPC");
  { FCNCALL_CALL_CTRL_WRAP(TPC,TPC.FCNCALL_CALL(TPC)); }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_MUSIC MUSIC[5];
  {
  FCNCALL_SUBNAME("MUSIC");
  FCNCALL_FOR(__i0,5)
  {
    FCNCALL_SUBINDEX(__i0);
    { FCNCALL_CALL_CTRL_WRAP_ARRAY(MUSIC__i0,,__i0,MUSIC[__i0].FCNCALL_CALL(MUSIC[__i0])); }
    FCNCALL_SUBINDEX_END(__i0);
  }
  FCNCALL_SUBNAME_END;
  }
  // raw_event_WR WR;
  {
  FCNCALL_SUBNAME("WR");
  { FCNCALL_CALL_CTRL_WRAP(WR,WR.FCNCALL_CALL(WR)); }
  FCNCALL_SUBNAME_END;
  }
  // DATA16 TPAT;
  {
  FCNCALL_SUBNAME("TPAT");
  { FCNCALL_CALL_CTRL_WRAP(TPAT,TPAT.FCNCALL_CALL(TPAT)); }
  FCNCALL_SUBNAME_END;
  }
  FCNCALL_RET;
}
#endif//USER_DEF_raw_event

#ifndef USER_DEF_raw_sticky
FCNCALL_TEMPLATE
FCNCALL_RET_TYPE FCNCALL_CLASS_NAME(raw_sticky)::FCNCALL_NAME(raw_sticky)
{
  FCNCALL_INIT;
  FCNCALL_CALL_CTRL_WRAP(raw_sticky_base,FCNCALL_CLASS_NAME(raw_sticky_base)::FCNCALL_CALL_BASE());
  FCNCALL_RET;
}
#endif//USER_DEF_raw_sticky

#include "gen/default_fcncall_undef.hh"


/** END_FUNCTION_CALL_PER_MEMBER **************************************/
